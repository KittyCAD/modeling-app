// Fan Housing
// The plastic housing that contains the fan and the motor

// Set units
@settings(defaultLengthUnit = mm)

// Import parameters
import * from "parameters.kcl"

// Model the housing which holds the motor, the fan, and the mounting provisions

// Bottom mounting face
bottomFaceSketch = startSketchOn(XY)
  |> startProfileAt([-fanSize / 2, -fanSize / 2], %)
  |> angledLine(angle = 0, length = fanSize, tag = $rectangleSegmentA001)
  |> angledLine(angle = segAng(rectangleSegmentA001) + 90, length = fanSize, tag = $rectangleSegmentB001)
  |> angledLine(angle = segAng(rectangleSegmentA001), length = -segLen(rectangleSegmentA001), tag = $rectangleSegmentC001)
  |> line(endAbsolute = [profileStartX(%), profileStartY(%)], tag = $rectangleSegmentD001)
  |> close()
  |> hole(circle(center = [0, 0], radius = 4), %)
  |> hole(circle(
       center = [
         mountingHoleSpacing / 2,
         mountingHoleSpacing / 2
       ],
       radius = mountingHoleSize / 2,
     ), %)
  |> hole(circle(
       center = [
         -mountingHoleSpacing / 2,
         mountingHoleSpacing / 2
       ],
       radius = mountingHoleSize / 2,
     ), %)
  |> hole(circle(
       center = [
         mountingHoleSpacing / 2,
         -mountingHoleSpacing / 2
       ],
       radius = mountingHoleSize / 2,
     ), %)
  |> hole(circle(
       center = [
         -mountingHoleSpacing / 2,
         -mountingHoleSpacing / 2
       ],
       radius = mountingHoleSize / 2,
     ), %)
  |> extrude(length = 4)

// Add large openings to the bottom face to allow airflow through the fan
airflowPattern = startSketchOn(bottomFaceSketch, 'END')
  |> startProfileAt([fanSize * 7 / 25, -fanSize * 9 / 25], %)
  |> angledLine(angle = 140, length = fanSize * 12 / 25, tag = $seg01)
  |> tangentialArc(radius = fanSize * 1 / 50, angle = 90)
  |> angledLine(angle = -130, length = fanSize * 8 / 25)
  |> tangentialArc(radius = fanSize * 1 / 50, angle = 90)
  |> angledLine(angle = segAng(seg01) + 180, length = fanSize * 2 / 25)
  |> tangentialArc(radius = fanSize * 8 / 25, angle = 40)
  |> xLine(length = fanSize * 3 / 25)
  |> tangentialArc(endAbsolute = [profileStartX(%), profileStartY(%)])
  |> close()
  |> patternCircular2d(
       instances = 4,
       center = [0, 0],
       arcDegrees = 360,
       rotateDuplicates = true,
     )
  |> extrude(length = -4)

// Scribe an octagon with 4 equal sides and 4 equal diagonals that scales with fan size. Calculate the start point to center it about the fan location. This will be the middle of the fan housing body
octLen = fanSize * 13 / 25
octDiag = fanSize * 8 / 25
bodyCenter = startSketchOn(bottomFaceSketch, 'END')
  |> startProfileAt([
       -octLen / 2,
       -octLen / 2 - (octDiag * cos(toRadians(45)))
     ], %)
  |> xLine(length = octLen, tag = $seg02)
  |> angledLine(angle = 45, length = octDiag, tag = $seg03)
  |> yLine(length = segLen(seg02), tag = $seg05)
  |> angledLine(angle = 135, length = segLen(seg03), tag = $seg06)
  |> xLine(length = -segLen(seg02), tag = $seg07)
  |> angledLine(angle = -135, length = segLen(seg03), tag = $seg08)
  |> yLine(length = -segLen(seg02), tag = $seg09)
  |> angledLine(angle = -45, length = segLen(seg03), tag = $seg10)
  |> close()
  |> extrude(length = fanHeight - 4 - 4)

// Cut a hole in the body to accommodate the fan
bodyFanHole = startSketchOn(bodyCenter, 'END')
  |> circle(center = [0, 0], radius = fanSize * 23 / 50)
  |> extrude(length = -(fanHeight - 4 - 4))

// Top mounting face. Cut a hole in the face to accommodate the fan
topFaceSketch = startSketchOn(bodyCenter, 'END')
topHoles = startProfileAt([-fanSize / 2, -fanSize / 2], topFaceSketch)
  |> angledLine(angle = 0, length = fanSize, tag = $rectangleSegmentA002)
  |> angledLine(angle = segAng(rectangleSegmentA002) + 90, length = fanSize, tag = $rectangleSegmentB002)
  |> angledLine(angle = segAng(rectangleSegmentA002), length = -segLen(rectangleSegmentA002), tag = $rectangleSegmentC002)
  |> line(endAbsolute = [profileStartX(%), profileStartY(%)], tag = $rectangleSegmentD002)
  |> close()
  |> hole(circle(center = [0, 0], radius = fanSize * 23 / 50), %)
  |> hole(circle(
       center = [
         mountingHoleSpacing / 2,
         mountingHoleSpacing / 2
       ],
       radius = mountingHoleSize / 2,
     ), %)
  |> hole(circle(
       center = [
         -mountingHoleSpacing / 2,
         mountingHoleSpacing / 2
       ],
       radius = mountingHoleSize / 2,
     ), %)
  |> hole(circle(
       center = [
         mountingHoleSpacing / 2,
         -mountingHoleSpacing / 2
       ],
       radius = mountingHoleSize / 2,
     ), %)
  |> hole(circle(
       center = [
         -mountingHoleSpacing / 2,
         -mountingHoleSpacing / 2
       ],
       radius = mountingHoleSize / 2,
     ), %)
  |> extrude(length = 4)

// Create a housing for the electric motor to sit
motorHousing = startSketchOn(bottomFaceSketch, 'END')
  |> circle(center = [0, 0], radius = 11.2)
  |> extrude(length = 16)

startSketchOn(motorHousing, 'END')
  |> circle(center = [0, 0], radius = 10)
  |> extrude(length = -16)
  |> appearance(color = "#854f29")
  |> fillet(
       radius = abs(fanSize - mountingHoleSpacing) / 2,
       tags = [
         getNextAdjacentEdge(rectangleSegmentA001),
         getNextAdjacentEdge(rectangleSegmentB001),
         getNextAdjacentEdge(rectangleSegmentC001),
         getNextAdjacentEdge(rectangleSegmentD001),
         getNextAdjacentEdge(rectangleSegmentA002),
         getNextAdjacentEdge(rectangleSegmentB002),
         getNextAdjacentEdge(rectangleSegmentC002),
         getNextAdjacentEdge(rectangleSegmentD002)
       ],
     )
