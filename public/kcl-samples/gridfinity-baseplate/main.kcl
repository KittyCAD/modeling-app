// Gridfinity Baseplate
// Gridfinity is a system to help you work more efficiently. This is a system invented by Zack Freedman. There are two main components the baseplate and the bins. The components are comprised of a matrix of squares. Allowing easy stacking and expansion

// Set units in millimeters (mm)
@settings(defaultLengthUnit = mm)

// Define constants
binLength = 42.0
cornerRadius = 4.0
firstStep = 0.7
secondStep = 1.8
thirdStep = 2.15

// Number of bins in each direction
countBinWidth = 2
countBinLength = 3

// The total height of the baseplate is a summation of the vertical heights of the baseplate steps
height = firstStep + secondStep + thirdStep

// define a function which builds the profile of the baseplate bin
fn face(plane) {
  faceSketch = startSketchOn(plane)
    |> startProfileAt([0, 0], %)
    |> yLine(length = height)
    |> angledLineOfYLength({ angle = -45, length = thirdStep }, %)
    |> yLine(length = -secondStep)
    |> angledLineOfYLength({ angle = -45, length = firstStep }, %)
    |> close()
  return faceSketch
}

// extrude a single side of the bin
singleSide = extrude(face(offsetPlane("YZ", offset = cornerRadius)), length = binLength - (cornerRadius * 2))

// create the other sides of the bin by using a circular pattern
sides = patternCircular3d(
  singleSide,
  arcDegrees = 360,
  axis = [0, 0, 1],
  center = [binLength / 2, binLength / 2, 0],
  instances = 4,
  rotateDuplicates = true
)

// define an axis axis000
axis000 = {
  custom = {
    axis = [0.0, 1.0],
    origin = [cornerRadius, cornerRadius]
  }
}

// create a single corner of the bin
singleCorner = revolve({ angle = -90, axis = axis000 }, face(offsetPlane("YZ", offset = cornerRadius)))

// create the corners of the bin
corners = patternCircular3d(
  singleCorner,
  arcDegrees = 360,
  axis = [0, 0, 1],
  center = [binLength / 2, binLength / 2, 0],
  instances = 4,
  rotateDuplicates = true
)

// create the baseplate by patterning sides
basePlateSides = patternLinear3d(
       sides,
       axis = [1.0, 0.0, 0.0],
       instances = countBinWidth,
       distance = binLength
     )
  |> patternLinear3d(
       axis = [0.0, 1.0, 0.0],
       instances = countBinLength,
       distance = binLength
     )

// create the corners of the baseplate by patterning the corners
basePlateCorners = patternLinear3d(
       corners,
       axis = [1.0, 0.0, 0.0],
       instances = countBinWidth,
       distance = binLength
     )
  |> patternLinear3d(
       axis = [0.0, 1.0, 0.0],
       instances = countBinLength,
       distance = binLength
     )
