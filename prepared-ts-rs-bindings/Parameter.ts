// This file was generated by [ts-rs](https://github.com/Aleph-Alpha/ts-rs). Do not edit this file manually.
import type { DefaultParamVal } from './DefaultParamVal'
import type { Identifier } from './Identifier'
import type { Node } from './Node'
import type { Type } from './Type'

/**
 * Parameter of a KCL function.
 */
export type Parameter = {
  type: 'Parameter'
  /**
   * The parameter's label or name.
   */
  identifier: Node<Identifier>
  /**
   * The type of the parameter.
   * This is optional if the user defines a type.
   */
  param_type: Node<Type> | null
  /**
   * Is the parameter optional?
   * If so, what is its default value?
   * If this is None, then the parameter is required.
   * Defaults to None.
   */
  default_value?: DefaultParamVal | null
  /**
   * Functions may declare at most one parameter without label, prefixed by '@', and it must be the first parameter.
   */
  labeled?: boolean
  digest?: [
    number,
    number,
    number,
    number,
    number,
    number,
    number,
    number,
    number,
    number,
    number,
    number,
    number,
    number,
    number,
    number,
    number,
    number,
    number,
    number,
    number,
    number,
    number,
    number,
    number,
    number,
    number,
    number,
    number,
    number,
    number,
    number,
  ]
}
