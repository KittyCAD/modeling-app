// This file was generated by [ts-rs](https://github.com/Aleph-Alpha/ts-rs). Do not edit this file manually.
import type { Face } from './Face'
import type { Helix } from './Helix'
import type { ImportedGeometry } from './ImportedGeometry'
import type { KclNone } from './KclNone'
import type { ModuleId } from './ModuleId'
import type { Node } from './Node'
import type { NumericType } from './NumericType'
import type { Plane } from './Plane'
import type { Sketch } from './Sketch'
import type { Solid } from './Solid'
import type { TagDeclarator } from './TagDeclarator'
import type { TagIdentifier } from './TagIdentifier'

/**
 * Any KCL value.
 */
export type KclValue =
  | { type: 'Uuid'; value: string }
  | { type: 'Bool'; value: boolean }
  | { type: 'Number'; value: number; ty: NumericType }
  | { type: 'String'; value: string }
  | { type: 'Tuple'; value: Array<KclValue> }
  | { type: 'HomArray'; value: Array<KclValue> }
  | {
      type: 'Object'
      value: { [key in string]?: KclValue }
      constrainable: boolean
    }
  | ({ type: 'TagIdentifier' } & TagIdentifier)
  | ({ type: 'TagDeclarator' } & Node<TagDeclarator>)
  | { type: 'Plane'; value: Plane }
  | { type: 'Face'; value: Face }
  | { type: 'Sketch'; value: Sketch }
  | { type: 'Solid'; value: Solid }
  | { type: 'Helix'; value: Helix }
  | ({ type: 'ImportedGeometry' } & ImportedGeometry)
  | { type: 'Function'; value: null }
  | { type: 'Module'; value: ModuleId }
  | { type: 'KclNone'; value: KclNone }
