@import "./colors.css" layer(base);
@import "./codemirror.css";
@import "tailwindcss";

@config '../tailwind.config.js';

/*
  The default border color has changed to `currentcolor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentcolor);
  }
}

.hotkey {
  @apply font-mono text-xs inline-block px-0.5 py-[2px] rounded-sm;

  /* This is the only place in our code where layout is impacted by theme.
     * We may not want that later, if hotkeys are possibly visible
     * while switching theme, but more padding feels better in dark mode.
     */
  @apply dark:px-1;

  @apply text-chalkboard-70 dark:text-chalkboard-40;
  @apply bg-chalkboard-20 dark:bg-chalkboard-90;
  @apply border border-t-0 border-b-2 border-chalkboard-30 dark:border-chalkboard-80;
}

@utility home-layout {
  @apply grid lg:grid-cols-3 xl:grid-cols-4 gap-4 lg:gap-x-16;
  grid-template-rows: auto 1fr;
}

@utility parsed-markdown {
  /*
    This is where your own custom Tailwind utility classes can go,
    which lets you use them with @apply in your CSS, and get
    autocomplete in classNames in your JSX.
  */
  & ul {
    @apply list-outside pl-4 lg:pl-8 my-2;
  }
  & ol {
    @apply list-outside pl-4 lg:pl-8 my-2;
  }

  & ul li {
    @apply list-disc;
  }

  & li p {
    @apply inline;
  }

  & code {
    @apply px-1 py-0.5 rounded-xs;
    @apply bg-chalkboard-20 text-chalkboard-80;
    @apply dark:bg-chalkboard-80 dark:text-chalkboard-30;
  }
}

@utility reset {
  &button {
    @apply bg-transparent border-transparent m-0 p-0 rounded-none text-base;
  }

  &button:hover {
    @apply bg-transparent border-transparent;
  }
}

@utility outline-appForeground {
  /* Add an outline that matches the app foreground (or text) color */
  @apply outline-chalkboard-100 dark:outline-chalkboard-10;
}

@utility onboarding-highlight {
  /* highlight an object with a moving dashed outline */
  @apply outline-solid outline-2;
  animation: onboarding-highlight 0.7s ease-in-out infinite alternate-reverse;
}

@utility body-bg {
  @apply bg-chalkboard-10;

  &.dark {
    @apply bg-chalkboard-100;
  }

  .dark & {
    @apply bg-chalkboard-100;
  }

  /* Can't use #code-mirror-override here as we're outside of this div */
  & .cm-diagnosticAction {
    @apply bg-primary;
  }
}

@utility dark {
  &.body-bg {
    @apply bg-chalkboard-100;
  }

  & .body-bg {
    @apply bg-chalkboard-100;
  }
}

@utility cm-diagnosticAction {
  /* Can't use #code-mirror-override here as we're outside of this div */
  .body-bg & {
    @apply bg-primary;
  }
}

@layer utilities {
  button,
  input,
  select,
  textarea,
  a {
    /* Make all interactive elements not act as handles
   * to drag the electron app window by default,
   * per the electron docs: https://www.electronjs.org/docs/latest/tutorial/window-customization#set-custom-draggable-region
  */
    -webkit-app-region: no-drag;
  }

  body {
    margin: 0;
    @apply font-sans;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    @apply text-chalkboard-110;
    overflow: hidden;
    scrollbar-width: thin;
    scrollbar-color: var(--color-chalkboard-20) var(--color-chalkboard-40);
  }

  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    @apply font-sans;
  }

  body.dark {
    scrollbar-color: var(--color-chalkboard-70) var(--color-chalkboard-90);
    @apply text-chalkboard-10;
  }

  select {
    @apply bg-chalkboard-20;
  }

  .dark select {
    @apply bg-chalkboard-90;
  }

  /* We hide the cursor if the user has turned off the textEditor.blinkingCursor setting
 * any elements that could present a blinking cursor to the user
*/
  input,
  textarea,
  *[contenteditable] {
    caret-color: var(--cursor-color, auto);
  }

  ::-webkit-scrollbar {
    @apply w-2 h-2 rounded-xs;
    @apply bg-chalkboard-20;
  }

  ::-webkit-scrollbar-thumb {
    @apply bg-chalkboard-40 rounded-xs;
  }

  .dark ::-webkit-scrollbar {
    @apply bg-chalkboard-90;
  }

  .dark ::-webkit-scrollbar-thumb {
    @apply bg-chalkboard-70;
  }

  button {
    @apply border border-chalkboard-30 m-0.5 px-3 rounded-sm text-xs;
    @apply focus-visible:outline-hidden;
  }

  button:hover {
    @apply border-chalkboard-40 bg-primary/5;
  }

  .dark button {
    @apply border-chalkboard-70;
  }

  .dark button:hover {
    @apply border-chalkboard-60;
  }

  button:disabled {
    @apply cursor-not-allowed bg-chalkboard-20/50 text-chalkboard-60 border-chalkboard-20;
  }

  .dark button:disabled {
    @apply bg-chalkboard-90 text-chalkboard-40 border-chalkboard-70;
  }

  a {
    @apply text-primary hover:hue-rotate-15;
  }

  .dark a {
    @apply hover:brightness-110 hover:hue-rotate-0;
  }

  a.action-button,
  .dark a.action-button {
    @apply text-inherit no-underline hover:hue-rotate-0;
  }

  input {
    @apply selection:bg-primary/50;
  }

  .dark input {
    @apply selection:bg-primary/40;
  }

  .mono {
    font-family: source-code-pro, Menlo, Monaco, Consolas, "Courier New",
      monospace;
  }

  code {
    font-family: source-code-pro, Menlo, Monaco, Consolas, "Courier New",
      monospace;
  }

  .extra-segment-handle {
    position: absolute;
    pointer-events: auto;
    width: 12px;
    height: 12px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 12px;
    opacity: 0;
    color: red;
    background: #ffff00 url("/clientSideSceneAssets/extra-segment-texture.svg")
      center / 10px 10px no-repeat;
    border-radius: 100%;
    background-size: 10px 10px;
  }

  .extra-segment-handle.hoveringLine {
    opacity: 0.7;
  }

  .extra-segment-handle.selected:not(.hoveringLine) {
    opacity: 0.7;
    background-color: #0000ff;
    background-image: url("/clientSideSceneAssets/extra-segment-texture-selected.svg");
  }

  .extra-segment-handle:hover {
    opacity: 1;
  }

  .segment-length-label-text {
    transform: translate(var(--x, 0), var(--y, 0)) rotate(var(--degree, 0));
    @apply font-mono body-bg px-2 pt-0.5 rounded-xs border border-chalkboard-110 dark:border-chalkboard-10;
  }
}

@layer utilities {
  @keyframes onboarding-highlight {
    0% {
      outline-offset: 0px;
    }

    100% {
      outline-offset: 4px;
    }
  }
}
