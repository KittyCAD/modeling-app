/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export function toml_stringify(a: number, b: number, c: number): void;
export function execute_wasm(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number): number;
export function kcl_lint(a: number, b: number): number;
export function make_default_planes(a: number): number;
export function modify_grid(a: number, b: number): number;
export function modify_ast_for_sketch_wasm(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number): number;
export function deserialize_files(a: number, b: number, c: number): void;
export function lexer_wasm(a: number, b: number, c: number): void;
export function parse_wasm(a: number, b: number, c: number): void;
export function recast_wasm(a: number, b: number, c: number): void;
export function __wbg_serverconfig_free(a: number): void;
export function serverconfig_new(a: number, b: number, c: number): number;
export function kcl_lsp_run(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number): number;
export function copilot_lsp_run(a: number, b: number, c: number, d: number, e: number): number;
export function is_points_ccw(a: number, b: number): number;
export function __wbg_tangentialarcinfooutputwasm_free(a: number): void;
export function __wbg_get_tangentialarcinfooutputwasm_center_x(a: number): number;
export function __wbg_set_tangentialarcinfooutputwasm_center_x(a: number, b: number): void;
export function __wbg_get_tangentialarcinfooutputwasm_center_y(a: number): number;
export function __wbg_set_tangentialarcinfooutputwasm_center_y(a: number, b: number): void;
export function __wbg_get_tangentialarcinfooutputwasm_arc_mid_point_x(a: number): number;
export function __wbg_set_tangentialarcinfooutputwasm_arc_mid_point_x(a: number, b: number): void;
export function __wbg_get_tangentialarcinfooutputwasm_arc_mid_point_y(a: number): number;
export function __wbg_set_tangentialarcinfooutputwasm_arc_mid_point_y(a: number, b: number): void;
export function __wbg_get_tangentialarcinfooutputwasm_radius(a: number): number;
export function __wbg_set_tangentialarcinfooutputwasm_radius(a: number, b: number): void;
export function __wbg_get_tangentialarcinfooutputwasm_start_angle(a: number): number;
export function __wbg_set_tangentialarcinfooutputwasm_start_angle(a: number, b: number): void;
export function __wbg_get_tangentialarcinfooutputwasm_end_angle(a: number): number;
export function __wbg_set_tangentialarcinfooutputwasm_end_angle(a: number, b: number): void;
export function __wbg_get_tangentialarcinfooutputwasm_ccw(a: number): number;
export function __wbg_set_tangentialarcinfooutputwasm_ccw(a: number, b: number): void;
export function __wbg_get_tangentialarcinfooutputwasm_arc_length(a: number): number;
export function __wbg_set_tangentialarcinfooutputwasm_arc_length(a: number, b: number): void;
export function get_tangential_arc_to_info(a: number, b: number, c: number, d: number, e: number, f: number, g: number): number;
export function program_memory_init(a: number): void;
export function coredump(a: number): number;
export function default_app_settings(a: number): void;
export function parse_app_settings(a: number, b: number, c: number): void;
export function default_project_settings(a: number): void;
export function parse_project_settings(a: number, b: number, c: number): void;
export function serialize_project_settings(a: number, b: number): void;
export function base64_decode(a: number, b: number, c: number): void;
export function __wbg_intounderlyingsource_free(a: number): void;
export function intounderlyingsource_pull(a: number, b: number): number;
export function intounderlyingsource_cancel(a: number): void;
export function __wbg_intounderlyingsink_free(a: number): void;
export function intounderlyingsink_write(a: number, b: number): number;
export function intounderlyingsink_close(a: number): number;
export function intounderlyingsink_abort(a: number, b: number): number;
export function __wbg_intounderlyingbytesource_free(a: number): void;
export function intounderlyingbytesource_type(a: number, b: number): void;
export function intounderlyingbytesource_autoAllocateChunkSize(a: number): number;
export function intounderlyingbytesource_start(a: number, b: number): void;
export function intounderlyingbytesource_pull(a: number, b: number): number;
export function intounderlyingbytesource_cancel(a: number): void;
export function __wbindgen_malloc(a: number, b: number): number;
export function __wbindgen_realloc(a: number, b: number, c: number, d: number): number;
export const __wbindgen_export_2: WebAssembly.Table;
export function _dyn_core__ops__function__FnMut__A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__h441a9e3e174bc8f1(a: number, b: number, c: number): void;
export function __wbindgen_add_to_stack_pointer(a: number): number;
export function __wbindgen_free(a: number, b: number, c: number): void;
export function __wbindgen_exn_store(a: number): void;
export function wasm_bindgen__convert__closures__invoke2_mut__h38ba35493531eafd(a: number, b: number, c: number, d: number): void;
