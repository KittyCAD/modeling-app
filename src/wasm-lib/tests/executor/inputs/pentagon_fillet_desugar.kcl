fn make_circle = (face, tag, pos, radius) => {
  const sg0 = startSketchOn(face, tag)
  const sg1 = startProfileAt([pos[0] + radius, pos[1]], sg0)
  const sg2 =  arc({
       angle_end: 360,
       angle_start: 0,
       radius: radius
     }, sg1, 'arc-' + tag)
  return close(sg2)
}

fn pentagon = (len) => {
  const sg3 = startSketchOn('XY')
  const sg4 = startProfileAt([-len / 2, -len / 2], sg3)
  const sg5 = angledLine({ angle: 0, length: len }, sg4, 'a')
  const sg6 = angledLine({
       angle: segAng('a', sg5) + 180 - 108,
       length: len
     },sg5, 'b')
  const sg7 = angledLine({
       angle: segAng('b', sg6) + 180 - 108,
       length: len
     }, sg6, 'c')
  const sg8 = angledLine({
       angle: segAng('c', sg7) + 180 - 108,
       length: len
     }, sg7, 'd')
  return angledLine({
       angle: segAng('d', sg8) + 180 - 108,
       length: len
     }, sg8)
}

const p = pentagon(48)
const pe = extrude(30, p)

const plumbus0 = make_circle(pe, 'a', [0, 0], 9)
const plumbus1 = extrude(18, plumbus0)
const plumbus2 = fillet({
       radius: 0.5,
       tags: ['arc-a', getOppositeEdge('arc-a', plumbus1)]
     }, plumbus1)
const plumbus3 = make_circle(pe, 'b', [0, 0], 9)
const plumbus4 = extrude(18, plumbus3)
const plumbus5 = fillet({
       radius: 0.5,
       tags: ['arc-b', getOppositeEdge('arc-b', plumbus4)]
     }, plumbus4)
