---
source: kcl/src/parser/parser_impl.rs
assertion_line: 3618
expression: actual
---
{
  "type": "UnboxedNode",
  "kind": {
    "body": [
      {
        "type": "VariableDeclaration",
        "type": "UnboxedNode",
        "kind": {
          "type": "VariableDeclaration",
          "declarations": [
            {
              "type": "UnboxedNode",
              "kind": {
                "type": "VariableDeclarator",
                "id": {
                  "type": "UnboxedNode",
                  "kind": {
                    "type": "Identifier",
                    "name": "myVar"
                  },
                  "start": 6,
                  "end": 11
                },
                "init": {
                  "type": "PipeExpression",
                  "type": "UnboxedNode",
                  "kind": {
                    "type": "PipeExpression",
                    "body": [
                      {
                        "type": "BinaryExpression",
                        "type": "UnboxedNode",
                        "kind": {
                          "type": "BinaryExpression",
                          "operator": "+",
                          "left": {
                            "type": "Literal",
                            "type": "UnboxedNode",
                            "kind": {
                              "type": "Literal",
                              "value": 5,
                              "raw": "5"
                            },
                            "start": 14,
                            "end": 15
                          },
                          "right": {
                            "type": "Literal",
                            "type": "UnboxedNode",
                            "kind": {
                              "type": "Literal",
                              "value": 6,
                              "raw": "6"
                            },
                            "start": 18,
                            "end": 19
                          }
                        },
                        "start": 14,
                        "end": 19
                      },
                      {
                        "type": "CallExpression",
                        "type": "UnboxedNode",
                        "kind": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "UnboxedNode",
                            "kind": {
                              "type": "Identifier",
                              "name": "myFunc"
                            },
                            "start": 23,
                            "end": 29
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "type": "UnboxedNode",
                              "kind": {
                                "type": "Literal",
                                "value": 45,
                                "raw": "45"
                              },
                              "start": 30,
                              "end": 32
                            },
                            {
                              "type": "PipeSubstitution",
                              "type": "UnboxedNode",
                              "kind": {
                                "type": "PipeSubstitution"
                              },
                              "start": 34,
                              "end": 35
                            }
                          ],
                          "optional": false
                        },
                        "start": 23,
                        "end": 36
                      }
                    ]
                  },
                  "start": 14,
                  "end": 36
                }
              },
              "start": 6,
              "end": 36
            }
          ],
          "kind": "const"
        },
        "start": 0,
        "end": 36
      }
    ]
  },
  "start": 0,
  "end": 36
}
