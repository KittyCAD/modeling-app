---
source: kcl/src/parser/parser_impl.rs
expression: actual
---
{
  "start": 0,
  "end": 26,
  "body": [
    {
      "type": "VariableDeclaration",
      "type": "VariableDeclaration",
      "start": 0,
      "end": 26,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 6,
          "end": 26,
          "id": {
            "type": "Identifier",
            "start": 6,
            "end": 11,
            "name": "myBox"
          },
          "init": {
            "type": "PipeExpression",
            "type": "PipeExpression",
            "start": 14,
            "end": 26,
            "body": [
              {
                "type": "CallExpression",
                "type": "CallExpression",
                "start": 14,
                "end": 18,
                "callee": {
                  "type": "Identifier",
                  "start": 14,
                  "end": 15,
                  "name": "f"
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "type": "Literal",
                    "start": 16,
                    "end": 17,
                    "value": 1,
                    "raw": "1"
                  }
                ],
                "optional": false,
                "function": {
                  "type": "InMemory"
                }
              },
              {
                "type": "CallExpression",
                "type": "CallExpression",
                "start": 22,
                "end": 26,
                "callee": {
                  "type": "Identifier",
                  "start": 22,
                  "end": 23,
                  "name": "g"
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "type": "Literal",
                    "start": 24,
                    "end": 25,
                    "value": 2,
                    "raw": "2"
                  }
                ],
                "optional": false,
                "function": {
                  "type": "InMemory"
                }
              }
            ],
            "nonCodeMeta": {
              "nonCodeNodes": {},
              "start": []
            }
          }
        }
      ],
      "kind": "const"
    }
  ],
  "nonCodeMeta": {
    "nonCodeNodes": {},
    "start": []
  }
}
