---
source: kcl/src/parser/parser_impl.rs
assertion_line: 3687
expression: actual
---
{
  "type": "UnboxedNode",
  "kind": {
    "body": [
      {
        "type": "VariableDeclaration",
        "type": "UnboxedNode",
        "kind": {
          "type": "VariableDeclaration",
          "declarations": [
            {
              "type": "UnboxedNode",
              "kind": {
                "type": "VariableDeclarator",
                "id": {
                  "type": "UnboxedNode",
                  "kind": {
                    "type": "Identifier",
                    "name": "thing"
                  },
                  "start": 3,
                  "end": 8
                },
                "init": {
                  "type": "FunctionExpression",
                  "type": "UnboxedNode",
                  "kind": {
                    "type": "FunctionExpression",
                    "params": [
                      {
                        "type": "Parameter",
                        "identifier": {
                          "type": "UnboxedNode",
                          "kind": {
                            "type": "Identifier",
                            "name": "param"
                          },
                          "start": 12,
                          "end": 17
                        },
                        "optional": false
                      }
                    ],
                    "body": {
                      "type": "UnboxedNode",
                      "kind": {
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "type": "UnboxedNode",
                            "kind": {
                              "type": "ReturnStatement",
                              "argument": {
                                "type": "Literal",
                                "type": "UnboxedNode",
                                "kind": {
                                  "type": "Literal",
                                  "value": true,
                                  "raw": "true"
                                },
                                "start": 39,
                                "end": 43
                              }
                            },
                            "start": 32,
                            "end": 43
                          }
                        ]
                      },
                      "start": 22,
                      "end": 49
                    }
                  },
                  "start": 11,
                  "end": 49
                }
              },
              "start": 3,
              "end": 49
            }
          ],
          "kind": "fn"
        },
        "start": 0,
        "end": 49
      },
      {
        "type": "ExpressionStatement",
        "type": "UnboxedNode",
        "kind": {
          "type": "ExpressionStatement",
          "expression": {
            "type": "CallExpression",
            "type": "UnboxedNode",
            "kind": {
              "type": "CallExpression",
              "callee": {
                "type": "UnboxedNode",
                "kind": {
                  "type": "Identifier",
                  "name": "thing"
                },
                "start": 54,
                "end": 59
              },
              "arguments": [
                {
                  "type": "Literal",
                  "type": "UnboxedNode",
                  "kind": {
                    "type": "Literal",
                    "value": false,
                    "raw": "false"
                  },
                  "start": 60,
                  "end": 65
                }
              ],
              "optional": false
            },
            "start": 54,
            "end": 66
          }
        },
        "start": 54,
        "end": 66
      }
    ]
  },
  "start": 0,
  "end": 66
}
