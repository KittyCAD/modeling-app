---
source: kcl/src/parser/parser_impl.rs
expression: actual
---
{
  "start": 0,
  "end": 35,
  "body": [
    {
      "type": "VariableDeclaration",
      "type": "VariableDeclaration",
      "start": 0,
      "end": 35,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 6,
          "end": 35,
          "id": {
            "type": "Identifier",
            "start": 6,
            "end": 11,
            "name": "myVar"
          },
          "init": {
            "type": "CallExpression",
            "type": "CallExpression",
            "start": 14,
            "end": 35,
            "callee": {
              "type": "Identifier",
              "start": 14,
              "end": 17,
              "name": "min"
            },
            "arguments": [
              {
                "type": "UnaryExpression",
                "type": "UnaryExpression",
                "start": 18,
                "end": 31,
                "operator": "-",
                "argument": {
                  "type": "CallExpression",
                  "type": "CallExpression",
                  "start": 19,
                  "end": 31,
                  "callee": {
                    "type": "Identifier",
                    "start": 19,
                    "end": 25,
                    "name": "legLen"
                  },
                  "arguments": [
                    {
                      "type": "Literal",
                      "type": "Literal",
                      "start": 26,
                      "end": 27,
                      "value": 5,
                      "raw": "5"
                    },
                    {
                      "type": "Literal",
                      "type": "Literal",
                      "start": 29,
                      "end": 30,
                      "value": 4,
                      "raw": "4"
                    }
                  ],
                  "optional": false,
                  "function": {
                    "type": "StdLib",
                    "func": {
                      "name": "legLen",
                      "summary": "Returns the length of the given leg.",
                      "description": "",
                      "tags": [],
                      "args": [
                        {
                          "name": "hypotenuse",
                          "type": "number",
                          "schema": {
                            "type": "number",
                            "format": "double"
                          },
                          "required": true
                        },
                        {
                          "name": "leg",
                          "type": "number",
                          "schema": {
                            "type": "number",
                            "format": "double"
                          },
                          "required": true
                        }
                      ],
                      "returnValue": {
                        "name": "",
                        "type": "number",
                        "schema": {
                          "type": "number",
                          "format": "double"
                        },
                        "required": true
                      },
                      "unpublished": false,
                      "deprecated": false
                    }
                  }
                }
              },
              {
                "type": "Literal",
                "type": "Literal",
                "start": 33,
                "end": 34,
                "value": 5,
                "raw": "5"
              }
            ],
            "optional": false,
            "function": {
              "type": "StdLib",
              "func": {
                "name": "min",
                "summary": "Computes the minimum of the given arguments.",
                "description": "",
                "tags": [],
                "args": [
                  {
                    "name": "args",
                    "type": "[number]",
                    "schema": {
                      "type": "array",
                      "items": {
                        "type": "number",
                        "format": "double"
                      }
                    },
                    "required": true
                  }
                ],
                "returnValue": {
                  "name": "",
                  "type": "number",
                  "schema": {
                    "type": "number",
                    "format": "double"
                  },
                  "required": true
                },
                "unpublished": false,
                "deprecated": false
              }
            }
          }
        }
      ],
      "kind": "const"
    }
  ],
  "nonCodeMeta": {
    "nonCodeNodes": {},
    "start": []
  }
}
