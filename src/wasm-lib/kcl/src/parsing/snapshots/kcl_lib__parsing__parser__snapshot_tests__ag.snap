---
source: kcl/src/parsing/parser.rs
expression: actual
---
{
  "body": [
    {
      "declaration": {
        "end": 64,
        "id": {
          "end": 8,
          "name": "mySketch",
          "start": 0,
          "type": "Identifier"
        },
        "init": {
          "body": [
            {
              "arguments": [
                {
                  "elements": [
                    {
                      "end": 27,
                      "raw": "0",
                      "start": 26,
                      "type": "Literal",
                      "type": "Literal",
                      "value": {
                        "value": 0.0,
                        "suffix": "None"
                      }
                    },
                    {
                      "end": 29,
                      "raw": "0",
                      "start": 28,
                      "type": "Literal",
                      "type": "Literal",
                      "value": {
                        "value": 0.0,
                        "suffix": "None"
                      }
                    }
                  ],
                  "end": 30,
                  "start": 25,
                  "type": "ArrayExpression",
                  "type": "ArrayExpression"
                }
              ],
              "callee": {
                "end": 24,
                "name": "startSketchAt",
                "start": 11,
                "type": "Identifier"
              },
              "end": 31,
              "start": 11,
              "type": "CallExpression",
              "type": "CallExpression"
            },
            {
              "arguments": [
                {
                  "elements": [
                    {
                      "end": 44,
                      "raw": "1",
                      "start": 43,
                      "type": "Literal",
                      "type": "Literal",
                      "value": {
                        "value": 1.0,
                        "suffix": "None"
                      }
                    },
                    {
                      "end": 47,
                      "raw": "1",
                      "start": 46,
                      "type": "Literal",
                      "type": "Literal",
                      "value": {
                        "value": 1.0,
                        "suffix": "None"
                      }
                    }
                  ],
                  "end": 48,
                  "start": 42,
                  "type": "ArrayExpression",
                  "type": "ArrayExpression"
                },
                {
                  "end": 51,
                  "start": 50,
                  "type": "PipeSubstitution",
                  "type": "PipeSubstitution"
                }
              ],
              "callee": {
                "end": 41,
                "name": "lineTo",
                "start": 35,
                "type": "Identifier"
              },
              "end": 52,
              "start": 35,
              "type": "CallExpression",
              "type": "CallExpression"
            },
            {
              "arguments": [
                {
                  "end": 63,
                  "start": 62,
                  "type": "PipeSubstitution",
                  "type": "PipeSubstitution"
                }
              ],
              "callee": {
                "end": 61,
                "name": "close",
                "start": 56,
                "type": "Identifier"
              },
              "end": 64,
              "start": 56,
              "type": "CallExpression",
              "type": "CallExpression"
            }
          ],
          "end": 64,
          "start": 11,
          "type": "PipeExpression",
          "type": "PipeExpression"
        },
        "start": 0,
        "type": "VariableDeclarator"
      },
      "end": 64,
      "kind": "const",
      "start": 0,
      "type": "VariableDeclaration",
      "type": "VariableDeclaration"
    }
  ],
  "end": 64,
  "start": 0
}
