---
source: kcl/src/simulation_tests.rs
description: Result of tokenizing property_of_object.kcl
snapshot_kind: text
---
{
  "Ok": [
    {
      "type": "lineComment",
      "start": 0,
      "end": 47,
      "value": "// This tests evaluating properties of objects."
    },
    {
      "type": "whitespace",
      "start": 47,
      "end": 50,
      "value": "\n\n\n"
    },
    {
      "type": "word",
      "start": 50,
      "end": 53,
      "value": "obj"
    },
    {
      "type": "whitespace",
      "start": 53,
      "end": 54,
      "value": " "
    },
    {
      "type": "operator",
      "start": 54,
      "end": 55,
      "value": "="
    },
    {
      "type": "whitespace",
      "start": 55,
      "end": 56,
      "value": " "
    },
    {
      "type": "brace",
      "start": 56,
      "end": 57,
      "value": "{"
    },
    {
      "type": "whitespace",
      "start": 57,
      "end": 58,
      "value": " "
    },
    {
      "type": "word",
      "start": 58,
      "end": 61,
      "value": "foo"
    },
    {
      "type": "colon",
      "start": 61,
      "end": 62,
      "value": ":"
    },
    {
      "type": "whitespace",
      "start": 62,
      "end": 63,
      "value": " "
    },
    {
      "type": "number",
      "start": 63,
      "end": 64,
      "value": "1"
    },
    {
      "type": "comma",
      "start": 64,
      "end": 65,
      "value": ","
    },
    {
      "type": "whitespace",
      "start": 65,
      "end": 66,
      "value": " "
    },
    {
      "type": "word",
      "start": 66,
      "end": 69,
      "value": "bar"
    },
    {
      "type": "colon",
      "start": 69,
      "end": 70,
      "value": ":"
    },
    {
      "type": "whitespace",
      "start": 70,
      "end": 71,
      "value": " "
    },
    {
      "type": "number",
      "start": 71,
      "end": 72,
      "value": "0"
    },
    {
      "type": "whitespace",
      "start": 72,
      "end": 73,
      "value": " "
    },
    {
      "type": "brace",
      "start": 73,
      "end": 74,
      "value": "}"
    },
    {
      "type": "whitespace",
      "start": 74,
      "end": 76,
      "value": "\n\n"
    },
    {
      "type": "lineComment",
      "start": 76,
      "end": 111,
      "value": "// Test: the property is a literal."
    },
    {
      "type": "whitespace",
      "start": 111,
      "end": 114,
      "value": "\n\n\n"
    },
    {
      "type": "word",
      "start": 114,
      "end": 119,
      "value": "one_a"
    },
    {
      "type": "whitespace",
      "start": 119,
      "end": 120,
      "value": " "
    },
    {
      "type": "operator",
      "start": 120,
      "end": 121,
      "value": "="
    },
    {
      "type": "whitespace",
      "start": 121,
      "end": 122,
      "value": " "
    },
    {
      "type": "word",
      "start": 122,
      "end": 125,
      "value": "obj"
    },
    {
      "type": "brace",
      "start": 125,
      "end": 126,
      "value": "["
    },
    {
      "type": "string",
      "start": 126,
      "end": 131,
      "value": "\"foo\""
    },
    {
      "type": "brace",
      "start": 131,
      "end": 132,
      "value": "]"
    },
    {
      "type": "whitespace",
      "start": 132,
      "end": 134,
      "value": "\n\n"
    },
    {
      "type": "word",
      "start": 134,
      "end": 152,
      "value": "assertLessThanOrEq"
    },
    {
      "type": "brace",
      "start": 152,
      "end": 153,
      "value": "("
    },
    {
      "type": "word",
      "start": 153,
      "end": 158,
      "value": "one_a"
    },
    {
      "type": "comma",
      "start": 158,
      "end": 159,
      "value": ","
    },
    {
      "type": "whitespace",
      "start": 159,
      "end": 160,
      "value": " "
    },
    {
      "type": "number",
      "start": 160,
      "end": 161,
      "value": "1"
    },
    {
      "type": "comma",
      "start": 161,
      "end": 162,
      "value": ","
    },
    {
      "type": "whitespace",
      "start": 162,
      "end": 163,
      "value": " "
    },
    {
      "type": "string",
      "start": 163,
      "end": 188,
      "value": "\"Literal property lookup\""
    },
    {
      "type": "brace",
      "start": 188,
      "end": 189,
      "value": ")"
    },
    {
      "type": "whitespace",
      "start": 189,
      "end": 190,
      "value": "\n"
    },
    {
      "type": "word",
      "start": 190,
      "end": 211,
      "value": "assertGreaterThanOrEq"
    },
    {
      "type": "brace",
      "start": 211,
      "end": 212,
      "value": "("
    },
    {
      "type": "word",
      "start": 212,
      "end": 217,
      "value": "one_a"
    },
    {
      "type": "comma",
      "start": 217,
      "end": 218,
      "value": ","
    },
    {
      "type": "whitespace",
      "start": 218,
      "end": 219,
      "value": " "
    },
    {
      "type": "number",
      "start": 219,
      "end": 220,
      "value": "1"
    },
    {
      "type": "comma",
      "start": 220,
      "end": 221,
      "value": ","
    },
    {
      "type": "whitespace",
      "start": 221,
      "end": 222,
      "value": " "
    },
    {
      "type": "string",
      "start": 222,
      "end": 247,
      "value": "\"Literal property lookup\""
    },
    {
      "type": "brace",
      "start": 247,
      "end": 248,
      "value": ")"
    },
    {
      "type": "whitespace",
      "start": 248,
      "end": 250,
      "value": "\n\n"
    },
    {
      "type": "lineComment",
      "start": 250,
      "end": 286,
      "value": "// Test: the property is a variable,"
    },
    {
      "type": "whitespace",
      "start": 286,
      "end": 287,
      "value": "\n"
    },
    {
      "type": "lineComment",
      "start": 287,
      "end": 335,
      "value": "// which must be evaluated before looking it up."
    },
    {
      "type": "whitespace",
      "start": 335,
      "end": 338,
      "value": "\n\n\n"
    },
    {
      "type": "word",
      "start": 338,
      "end": 339,
      "value": "p"
    },
    {
      "type": "whitespace",
      "start": 339,
      "end": 340,
      "value": " "
    },
    {
      "type": "operator",
      "start": 340,
      "end": 341,
      "value": "="
    },
    {
      "type": "whitespace",
      "start": 341,
      "end": 342,
      "value": " "
    },
    {
      "type": "string",
      "start": 342,
      "end": 347,
      "value": "\"foo\""
    },
    {
      "type": "whitespace",
      "start": 347,
      "end": 348,
      "value": "\n"
    },
    {
      "type": "word",
      "start": 348,
      "end": 353,
      "value": "one_b"
    },
    {
      "type": "whitespace",
      "start": 353,
      "end": 354,
      "value": " "
    },
    {
      "type": "operator",
      "start": 354,
      "end": 355,
      "value": "="
    },
    {
      "type": "whitespace",
      "start": 355,
      "end": 356,
      "value": " "
    },
    {
      "type": "word",
      "start": 356,
      "end": 359,
      "value": "obj"
    },
    {
      "type": "brace",
      "start": 359,
      "end": 360,
      "value": "["
    },
    {
      "type": "word",
      "start": 360,
      "end": 361,
      "value": "p"
    },
    {
      "type": "brace",
      "start": 361,
      "end": 362,
      "value": "]"
    },
    {
      "type": "whitespace",
      "start": 362,
      "end": 364,
      "value": "\n\n"
    },
    {
      "type": "word",
      "start": 364,
      "end": 382,
      "value": "assertLessThanOrEq"
    },
    {
      "type": "brace",
      "start": 382,
      "end": 383,
      "value": "("
    },
    {
      "type": "word",
      "start": 383,
      "end": 388,
      "value": "one_b"
    },
    {
      "type": "comma",
      "start": 388,
      "end": 389,
      "value": ","
    },
    {
      "type": "whitespace",
      "start": 389,
      "end": 390,
      "value": " "
    },
    {
      "type": "number",
      "start": 390,
      "end": 391,
      "value": "1"
    },
    {
      "type": "comma",
      "start": 391,
      "end": 392,
      "value": ","
    },
    {
      "type": "whitespace",
      "start": 392,
      "end": 393,
      "value": " "
    },
    {
      "type": "string",
      "start": 393,
      "end": 419,
      "value": "\"Computed property lookup\""
    },
    {
      "type": "brace",
      "start": 419,
      "end": 420,
      "value": ")"
    },
    {
      "type": "whitespace",
      "start": 420,
      "end": 421,
      "value": "\n"
    },
    {
      "type": "word",
      "start": 421,
      "end": 442,
      "value": "assertGreaterThanOrEq"
    },
    {
      "type": "brace",
      "start": 442,
      "end": 443,
      "value": "("
    },
    {
      "type": "word",
      "start": 443,
      "end": 448,
      "value": "one_b"
    },
    {
      "type": "comma",
      "start": 448,
      "end": 449,
      "value": ","
    },
    {
      "type": "whitespace",
      "start": 449,
      "end": 450,
      "value": " "
    },
    {
      "type": "number",
      "start": 450,
      "end": 451,
      "value": "1"
    },
    {
      "type": "comma",
      "start": 451,
      "end": 452,
      "value": ","
    },
    {
      "type": "whitespace",
      "start": 452,
      "end": 453,
      "value": " "
    },
    {
      "type": "string",
      "start": 453,
      "end": 479,
      "value": "\"Computed property lookup\""
    },
    {
      "type": "brace",
      "start": 479,
      "end": 480,
      "value": ")"
    },
    {
      "type": "whitespace",
      "start": 480,
      "end": 482,
      "value": "\n\n"
    },
    {
      "type": "lineComment",
      "start": 482,
      "end": 519,
      "value": "// Test: multiple literal properties."
    },
    {
      "type": "whitespace",
      "start": 519,
      "end": 522,
      "value": "\n\n\n"
    },
    {
      "type": "word",
      "start": 522,
      "end": 526,
      "value": "obj2"
    },
    {
      "type": "whitespace",
      "start": 526,
      "end": 527,
      "value": " "
    },
    {
      "type": "operator",
      "start": 527,
      "end": 528,
      "value": "="
    },
    {
      "type": "whitespace",
      "start": 528,
      "end": 529,
      "value": " "
    },
    {
      "type": "brace",
      "start": 529,
      "end": 530,
      "value": "{"
    },
    {
      "type": "whitespace",
      "start": 530,
      "end": 531,
      "value": " "
    },
    {
      "type": "word",
      "start": 531,
      "end": 536,
      "value": "inner"
    },
    {
      "type": "colon",
      "start": 536,
      "end": 537,
      "value": ":"
    },
    {
      "type": "whitespace",
      "start": 537,
      "end": 538,
      "value": " "
    },
    {
      "type": "word",
      "start": 538,
      "end": 541,
      "value": "obj"
    },
    {
      "type": "whitespace",
      "start": 541,
      "end": 542,
      "value": " "
    },
    {
      "type": "brace",
      "start": 542,
      "end": 543,
      "value": "}"
    },
    {
      "type": "whitespace",
      "start": 543,
      "end": 545,
      "value": "\n\n"
    },
    {
      "type": "word",
      "start": 545,
      "end": 550,
      "value": "one_c"
    },
    {
      "type": "whitespace",
      "start": 550,
      "end": 551,
      "value": " "
    },
    {
      "type": "operator",
      "start": 551,
      "end": 552,
      "value": "="
    },
    {
      "type": "whitespace",
      "start": 552,
      "end": 553,
      "value": " "
    },
    {
      "type": "word",
      "start": 553,
      "end": 557,
      "value": "obj2"
    },
    {
      "type": "period",
      "start": 557,
      "end": 558,
      "value": "."
    },
    {
      "type": "word",
      "start": 558,
      "end": 563,
      "value": "inner"
    },
    {
      "type": "brace",
      "start": 563,
      "end": 564,
      "value": "["
    },
    {
      "type": "string",
      "start": 564,
      "end": 569,
      "value": "\"foo\""
    },
    {
      "type": "brace",
      "start": 569,
      "end": 570,
      "value": "]"
    },
    {
      "type": "whitespace",
      "start": 570,
      "end": 572,
      "value": "\n\n"
    },
    {
      "type": "word",
      "start": 572,
      "end": 590,
      "value": "assertLessThanOrEq"
    },
    {
      "type": "brace",
      "start": 590,
      "end": 591,
      "value": "("
    },
    {
      "type": "word",
      "start": 591,
      "end": 596,
      "value": "one_c"
    },
    {
      "type": "comma",
      "start": 596,
      "end": 597,
      "value": ","
    },
    {
      "type": "whitespace",
      "start": 597,
      "end": 598,
      "value": " "
    },
    {
      "type": "number",
      "start": 598,
      "end": 599,
      "value": "1"
    },
    {
      "type": "comma",
      "start": 599,
      "end": 600,
      "value": ","
    },
    {
      "type": "whitespace",
      "start": 600,
      "end": 601,
      "value": " "
    },
    {
      "type": "string",
      "start": 601,
      "end": 626,
      "value": "\"Literal property lookup\""
    },
    {
      "type": "brace",
      "start": 626,
      "end": 627,
      "value": ")"
    },
    {
      "type": "whitespace",
      "start": 627,
      "end": 628,
      "value": "\n"
    },
    {
      "type": "word",
      "start": 628,
      "end": 649,
      "value": "assertGreaterThanOrEq"
    },
    {
      "type": "brace",
      "start": 649,
      "end": 650,
      "value": "("
    },
    {
      "type": "word",
      "start": 650,
      "end": 655,
      "value": "one_c"
    },
    {
      "type": "comma",
      "start": 655,
      "end": 656,
      "value": ","
    },
    {
      "type": "whitespace",
      "start": 656,
      "end": 657,
      "value": " "
    },
    {
      "type": "number",
      "start": 657,
      "end": 658,
      "value": "1"
    },
    {
      "type": "comma",
      "start": 658,
      "end": 659,
      "value": ","
    },
    {
      "type": "whitespace",
      "start": 659,
      "end": 660,
      "value": " "
    },
    {
      "type": "string",
      "start": 660,
      "end": 685,
      "value": "\"Literal property lookup\""
    },
    {
      "type": "brace",
      "start": 685,
      "end": 686,
      "value": ")"
    },
    {
      "type": "whitespace",
      "start": 686,
      "end": 688,
      "value": "\n\n"
    },
    {
      "type": "lineComment",
      "start": 688,
      "end": 746,
      "value": "// Test: multiple properties, mix of literal and computed."
    },
    {
      "type": "whitespace",
      "start": 746,
      "end": 749,
      "value": "\n\n\n"
    },
    {
      "type": "word",
      "start": 749,
      "end": 754,
      "value": "one_d"
    },
    {
      "type": "whitespace",
      "start": 754,
      "end": 755,
      "value": " "
    },
    {
      "type": "operator",
      "start": 755,
      "end": 756,
      "value": "="
    },
    {
      "type": "whitespace",
      "start": 756,
      "end": 757,
      "value": " "
    },
    {
      "type": "word",
      "start": 757,
      "end": 761,
      "value": "obj2"
    },
    {
      "type": "period",
      "start": 761,
      "end": 762,
      "value": "."
    },
    {
      "type": "word",
      "start": 762,
      "end": 767,
      "value": "inner"
    },
    {
      "type": "brace",
      "start": 767,
      "end": 768,
      "value": "["
    },
    {
      "type": "word",
      "start": 768,
      "end": 769,
      "value": "p"
    },
    {
      "type": "brace",
      "start": 769,
      "end": 770,
      "value": "]"
    },
    {
      "type": "whitespace",
      "start": 770,
      "end": 772,
      "value": "\n\n"
    },
    {
      "type": "word",
      "start": 772,
      "end": 790,
      "value": "assertLessThanOrEq"
    },
    {
      "type": "brace",
      "start": 790,
      "end": 791,
      "value": "("
    },
    {
      "type": "word",
      "start": 791,
      "end": 796,
      "value": "one_d"
    },
    {
      "type": "comma",
      "start": 796,
      "end": 797,
      "value": ","
    },
    {
      "type": "whitespace",
      "start": 797,
      "end": 798,
      "value": " "
    },
    {
      "type": "number",
      "start": 798,
      "end": 799,
      "value": "1"
    },
    {
      "type": "comma",
      "start": 799,
      "end": 800,
      "value": ","
    },
    {
      "type": "whitespace",
      "start": 800,
      "end": 801,
      "value": " "
    },
    {
      "type": "string",
      "start": 801,
      "end": 827,
      "value": "\"Computed property lookup\""
    },
    {
      "type": "brace",
      "start": 827,
      "end": 828,
      "value": ")"
    },
    {
      "type": "whitespace",
      "start": 828,
      "end": 829,
      "value": "\n"
    },
    {
      "type": "word",
      "start": 829,
      "end": 850,
      "value": "assertGreaterThanOrEq"
    },
    {
      "type": "brace",
      "start": 850,
      "end": 851,
      "value": "("
    },
    {
      "type": "word",
      "start": 851,
      "end": 856,
      "value": "one_d"
    },
    {
      "type": "comma",
      "start": 856,
      "end": 857,
      "value": ","
    },
    {
      "type": "whitespace",
      "start": 857,
      "end": 858,
      "value": " "
    },
    {
      "type": "number",
      "start": 858,
      "end": 859,
      "value": "1"
    },
    {
      "type": "comma",
      "start": 859,
      "end": 860,
      "value": ","
    },
    {
      "type": "whitespace",
      "start": 860,
      "end": 861,
      "value": " "
    },
    {
      "type": "string",
      "start": 861,
      "end": 887,
      "value": "\"Computed property lookup\""
    },
    {
      "type": "brace",
      "start": 887,
      "end": 888,
      "value": ")"
    },
    {
      "type": "whitespace",
      "start": 888,
      "end": 889,
      "value": "\n"
    }
  ]
}
