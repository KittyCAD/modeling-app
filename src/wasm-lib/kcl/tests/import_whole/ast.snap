---
source: kcl/src/simulation_tests.rs
description: Result of parsing import_whole.kcl
---
{
  "Ok": {
    "body": [
      {
        "end": 32,
        "path": "exported_mod.kcl",
        "selector": {
          "type": "None",
          "alias": {
            "end": 32,
            "name": "foo",
            "start": 29,
            "type": "Identifier"
          }
        },
        "start": 0,
        "type": "ImportStatement",
        "type": "ImportStatement"
      },
      {
        "declaration": {
          "end": 96,
          "id": {
            "end": 37,
            "name": "bar",
            "start": 34,
            "type": "Identifier"
          },
          "init": {
            "body": [
              {
                "end": 43,
                "name": "foo",
                "start": 40,
                "type": "Identifier",
                "type": "Identifier"
              },
              {
                "arguments": [
                  {
                    "end": 92,
                    "properties": [
                      {
                        "end": 72,
                        "key": {
                          "end": 62,
                          "name": "faces",
                          "start": 57,
                          "type": "Identifier"
                        },
                        "start": 57,
                        "type": "ObjectProperty",
                        "value": {
                          "elements": [
                            {
                              "end": 71,
                              "raw": "'end'",
                              "start": 66,
                              "type": "Literal",
                              "type": "Literal",
                              "value": "end"
                            }
                          ],
                          "end": 72,
                          "start": 65,
                          "type": "ArrayExpression",
                          "type": "ArrayExpression"
                        }
                      },
                      {
                        "end": 90,
                        "key": {
                          "end": 83,
                          "name": "thickness",
                          "start": 74,
                          "type": "Identifier"
                        },
                        "start": 74,
                        "type": "ObjectProperty",
                        "value": {
                          "end": 90,
                          "raw": "0.25",
                          "start": 86,
                          "type": "Literal",
                          "type": "Literal",
                          "value": 0.25
                        }
                      }
                    ],
                    "start": 55,
                    "type": "ObjectExpression",
                    "type": "ObjectExpression"
                  },
                  {
                    "end": 95,
                    "start": 94,
                    "type": "PipeSubstitution",
                    "type": "PipeSubstitution"
                  }
                ],
                "callee": {
                  "end": 54,
                  "name": "shell",
                  "start": 49,
                  "type": "Identifier"
                },
                "end": 96,
                "start": 49,
                "type": "CallExpression",
                "type": "CallExpression"
              }
            ],
            "end": 96,
            "start": 40,
            "type": "PipeExpression",
            "type": "PipeExpression"
          },
          "start": 34,
          "type": "VariableDeclarator"
        },
        "end": 96,
        "kind": "const",
        "start": 34,
        "type": "VariableDeclaration",
        "type": "VariableDeclaration"
      }
    ],
    "end": 97,
    "nonCodeMeta": {
      "nonCodeNodes": {
        "0": [
          {
            "end": 34,
            "start": 32,
            "type": "NonCodeNode",
            "value": {
              "type": "newLine"
            }
          }
        ]
      },
      "startNodes": []
    },
    "start": 0
  }
}
