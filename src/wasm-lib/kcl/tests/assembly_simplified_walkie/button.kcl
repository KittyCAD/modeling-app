// Walkie Talkie button

// Set units
@settings(defaultLengthUnit = in)

// Import constants
//import screenHeight, buttonWidth, tolerance, buttonHeight, buttonThickness from 'globals.kcl'
export height = 4
export width = 2.5
export thickness = 1
export chamferLength = .325
export offset = .125
export screenWidth = 1.75
export screenHeight = 1
export screenYPosition = height / 2 - 0.75
export screenDepth = -.0625
export speakerBoxWidth = 1.25
export speakerBoxHeight = 1.25

// antenna
export antennaBaseWidth = .5
export antennaBaseHeight = .25
export antennaTopWidth = .30
export antennaTopHeight = .05

// button
export buttonWidth = .15
export tolerance = 0.020
export buttonHeight = screenHeight / 2 - tolerance
export buttonThickness = .040

// case
export squareHoleSideLength = 0.0625
export caseTolerance = 0.010

// knob
export knobDiameter = .5
export knobHeight = .25
export knobRadius = 0.050

// talk-button
export talkButtonSideLength = 0.5
export talkButtonHeight = 0.050


// Create a function for the button
export fn button(origin, rotation, plane) {
  buttonSketch = startSketchOn(plane)
    |> startProfileAt([origin[0], origin[1]], %)
    |> angledLine({
         angle = 180 + rotation,
         length = buttonWidth
       }, %, $tag1)
    |> angledLine({
         angle = 270 + rotation,
         length = buttonHeight
       }, %, $tag2)
    |> angledLine({
         angle = 0 + rotation,
         length = buttonWidth
       }, %)
    |> close()
  buttonExtrude = extrude(buttonSketch, length = buttonThickness)
    |> chamfer(
         length = .050,
         tags = [
           getNextAdjacentEdge(tag1),
           getNextAdjacentEdge(tag2)
         ]
       )
     |> appearance(color = "#ff0000")

  return buttonExtrude
}
