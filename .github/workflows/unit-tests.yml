name: Unit Tests

on:
  pull_request:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

permissions:
  contents: write
  pull-requests: write
  actions: read

jobs:
  npm-build-wasm:
    uses: ./.github/workflows/build-wasm.yml

  npm-test-unit:
    runs-on: namespace-profile-ubuntu-2-cores
    needs: npm-build-wasm
    steps:
      - uses: actions/checkout@v5

      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - run: npm install
      - uses: taiki-e/install-action@c07504cae06f832dc8de08911c9a9c5cddb0d2d3
        with:
          tool: wasm-pack

      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Copy prepared wasm
        run: |
          ls -R prepared-wasm
          cp prepared-wasm/kcl_wasm_lib_bg.wasm public
          mkdir rust/kcl-wasm-lib/pkg
          cp prepared-wasm/kcl_wasm_lib* rust/kcl-wasm-lib/pkg

      - name: Copy prepared ts-rs bindings
        run: |
          ls -R prepared-ts-rs-bindings
          mkdir rust/kcl-lib/bindings
          cp -r prepared-ts-rs-bindings/* rust/kcl-lib/bindings/

      - run: npm run simpleserver:bg
        if: ${{ github.event_name != 'release' && github.event_name != 'schedule' }}

      - name: Install Chromium Browser
        if: ${{ github.event_name != 'release' && github.event_name != 'schedule' }}
        run: npm run playwright install chromium --with-deps

      - name: Run unit tests
        if: ${{ github.event_name != 'release' && github.event_name != 'schedule' }}
        run: xvfb-run -a npm run test:unit
        env:
          VITE_KITTYCAD_API_TOKEN: ${{ secrets.KITTYCAD_API_TOKEN_DEV }}

      - name: Upload results
        if: always()
        run: .github/ci-cd-scripts/upload-results.sh
        env:
          TAB_API_URL: ${{ secrets.TAB_API_URL }}
          TAB_API_KEY: ${{ secrets.TAB_API_KEY }}
          CI_COMMIT_SHA: ${{ github.event.pull_request.head.sha }}
          CI_PR_NUMBER: ${{ github.event.pull_request.number }}
          CI_SUITE: unit

      - name: Commit generated files
        if: ${{ github.event_name != 'release' && github.event_name != 'schedule' }}
        uses: KittyCAD/gha-actions-public/pr-commit@main
        with:
          app-id: ${{ secrets.MODELING_APP_GH_APP_ID }}
          private-key: ${{ secrets.MODELING_APP_GH_APP_PRIVATE_KEY }}
          commit-message: "Look at this (photo)Graph *in the voice of Nickelback*"

