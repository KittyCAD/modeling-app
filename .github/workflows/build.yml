name: Build

on:
  push:
    tags:
      - 'v*'
  pull_request:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    steps:
      - uses: actions/checkout@v2
      - name: install ubuntu system dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libayatana-appindicator3-dev librsvg2-dev libwebkit2gtk-4.0-dev
        # libgdk-pixbuf2.0-dev libsoup2.4-dev libjavascriptcoregtk-4.0-dev
      - name: Sync node version and setup cache
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'yarn' # Set this to npm, yarn or pnpm.
      - run: yarn install
      - name: Rust setup
        uses: dtolnay/rust-toolchain@stable
      - name: wasm prep
        shell: bash
        run: |
          mkdir src/wasm-lib/pkg; cd src/wasm-lib
          npx wasm-pack build --target web --out-dir pkg
          cd ../../
          cp src/wasm-lib/pkg/wasm_lib_bg.wasm public
      - name: macos sed
        if: matrix.os == 'macos-latest'
        shell: bash
        run: |
          sed -i '' 's/import.meta.url//g' "./src/wasm-lib/pkg/wasm_lib.js"
      - name: ubuntu and windows sed
        if: matrix.os != 'macos-latest'
        shell: bash
        run: |
          sed -i 's/import.meta.url//g' "./src/wasm-lib/pkg/wasm_lib.js"
      - name: add missing import
        shell: bash
        run: |
          yarn add-missing-import
          pwd
          ls -la
          yarn fmt
      # - name: tauri build
      #   shell: bash
      #   run: yarn tauri build
      # - uses: actions/upload-artifact@v2
      #   with:
      #     name: tauri-app
      #     path: src-tauri/target/release/bundle
      - name: Build the app
        uses: tauri-apps/tauri-action@v0

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CI: false
        with:
          tagName: ${{ github.ref_name }} # This only works if your workflow triggers on new tags.
          releaseName: 'App Name v__VERSION__' # tauri-action replaces \_\_VERSION\_\_ with the app version.
          releaseBody: 'See the assets to download and install this version.'
          releaseDraft: true
          prerelease: false