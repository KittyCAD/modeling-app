name: publish-apps

on:
  release:
    types: [published]

env:
  NOTES: ${{ github.event.release.body }}
  NIGHTLY: ${{ endsWith(github.event.release.name, '-nightly') }}

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  publish-apps-release:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    env:
      PUB_DATE: ${{ github.event.release.created_at }}
      BUCKET_DIR: ${{ endsWith(github.event.release.name, '-nightly') && 'dl.kittycad.io/releases/modeling-app/nightly' || 'dl.kittycad.io/releases/modeling-app' }}
      WEBSITE_DIR: ${{ endsWith(github.event.release.name, '-nightly') && 'dl.zoo.dev/releases/modeling-app/nightly' || 'dl.zoo.dev/releases/modeling-app' }}
      URL_CODED_NAME: ${{ endsWith(github.event.release.name, '-nightly') && 'Zoo%20Modeling%20App%20%28Nightly%29' || 'Zoo%20Modeling%20App' }}
    steps:
      # TODO: download draft release artifacts

      - name: List artifacts
        run: "ls -R out"

      - name: Authenticate to Google Cloud
        uses: 'google-github-actions/auth@v2.1.7'
        with:
          credentials_json: '${{ secrets.GOOGLE_CLOUD_DL_SA }}'

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2.1.2
        with:
          project_id: ${{ env.GOOGLE_CLOUD_PROJECT_ID }}

      - name: Upload release files to public bucket
        uses: google-github-actions/upload-cloud-storage@v2.2.1
        with:
          path: out
          glob: 'Zoo*'
          parent: false
          destination: ${{ env.BUCKET_DIR }}

      - name: Upload update endpoint to public bucket
        uses: google-github-actions/upload-cloud-storage@v2.2.1
        with:
          path: out
          glob: 'latest*'
          parent: false
          destination: ${{ env.BUCKET_DIR }}

      - name: Upload download endpoint to public bucket
        uses: google-github-actions/upload-cloud-storage@v2.2.1
        with:
          path: out/last_download.json
          destination: ${{ env.BUCKET_DIR }}

      - name: Invalidate bucket cache on latest*.yml and last_download.json files
        if: ${{ env.NIGHTLY == false }}
        run: |
          gcloud compute url-maps invalidate-cdn-cache dl-url-map --path="/releases/modeling-app/last_download.json" --async
          gcloud compute url-maps invalidate-cdn-cache dl-url-map --path="/releases/modeling-app/latest-linux-arm64.yml" --async
          gcloud compute url-maps invalidate-cdn-cache dl-url-map --path="/releases/modeling-app/latest-mac.yml" --async
          gcloud compute url-maps invalidate-cdn-cache dl-url-map --path="/releases/modeling-app/latest.yml" --async


  announce_release:
    needs: [publish-apps-release]
    runs-on: ubuntu-22.04
    if: github.event_name == 'release'
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Announce Release
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
          RELEASE_VERSION: ${{ github.event.release.tag_name }}
          RELEASE_BODY: ${{ github.event.release.body}}
        run: python public/announce_release.py
