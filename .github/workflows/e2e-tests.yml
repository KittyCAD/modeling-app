name: E2E Tests
on:
  push:
    branches: [ main, pierremtb/adhoc/e2e-no-cache-no-shard ]
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

permissions:
  contents: write
  pull-requests: write
  actions: read


jobs:
  electron:
    timeout-minutes: 60
    name: playwright:electron:${{ matrix.os }} ${{ matrix.shardIndex }} ${{ matrix.shardTotal }}
    strategy:
      fail-fast: false
      matrix:
        # TODO: enable self-hosted-windows-8-cores once available
        os: [namespace-profile-ubuntu-8-cores, namespace-profile-macos-8-cores, windows-16-cores]
        shardIndex: [1]
        shardTotal: [1]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/create-github-app-token@v1
      id: app-token
      with:
        app-id: ${{ secrets.MODELING_APP_GH_APP_ID }}
        private-key: ${{ secrets.MODELING_APP_GH_APP_PRIVATE_KEY }}
        owner: ${{ github.repository_owner }}

    - uses: actions/checkout@v4
      with:
        token: ${{ steps.app-token.outputs.token }}

    - uses: actions/setup-node@v4
      with:
        node-version-file: '.nvmrc'
        cache: 'yarn'

    - uses: KittyCAD/action-install-cli@main
    - name: Install dependencies
      shell: bash
      run: yarn

    - name: Cache Playwright Browsers
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/ms-playwright/
        key: ${{ runner.os }}-playwright-${{ hashFiles('yarn.lock') }}

    - name: Install Playwright Browsers
      shell: bash
      run: yarn playwright install --with-deps

    - name: Build Wasm
      shell: bash
      run: yarn build:wasm

    - name: build web
      shell: bash
      run: yarn tronb:vite:dev

    - name: Run ubuntu/chrome snapshots
      if: ${{ matrix.os == 'namespace-profile-ubuntu-8-cores' && matrix.shardIndex == 1 }}
      shell: bash
      # TODO: break this in its own job, for now it's not slowing down the overall execution as ubuntu is the quickest,
      # but we could do better. This forces a large 1/1 shard of all 20 snapshot tests that runs in about 3 minutes.
      run: |
        PLATFORM=web yarn playwright test --config=playwright.config.ts --retries="3" --update-snapshots --grep=@snapshot  --shard=1/1
      env:
        CI: true
        NODE_ENV: development
        VITE_KC_DEV_TOKEN: ${{ secrets.KITTYCAD_API_TOKEN_DEV }}
        VITE_KC_SKIP_AUTH: true
        token: ${{ secrets.KITTYCAD_API_TOKEN_DEV }}
        snapshottoken: ${{ secrets.KITTYCAD_API_TOKEN }}

    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report-${{ matrix.os }}-snapshot-${{ matrix.shardIndex }}-${{ github.sha }}
        path: playwright-report/
        include-hidden-files: true
        retention-days: 30
        overwrite: true

    - name: Clean up test-results
      run: rm -r test-results

    - name: check for changes
      if: ${{ matrix.os == 'namespace-profile-ubuntu-8-cores' && matrix.shardIndex == 1 && github.ref != 'refs/heads/main' }}
      shell: bash
      id: git-check
      run: |
          git add e2e/playwright/snapshot-tests.spec.ts-snapshots
          if git status | grep -q "Changes to be committed"
          then echo "modified=true" >> $GITHUB_OUTPUT
          else echo "modified=false" >> $GITHUB_OUTPUT
          fi

    - name: Commit changes, if any
      if: steps.git-check.outputs.modified == 'true'
      shell: bash
      run: |
        git add e2e/playwright/snapshot-tests.spec.ts-snapshots
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git remote set-url origin https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
        git fetch origin
        echo ${{ github.head_ref }}
        git checkout ${{ github.head_ref }}
        git commit -m "A snapshot a day keeps the bugs away! üì∑üêõ (OS: ${{matrix.os}})" || true
        git push
        git push origin ${{ github.head_ref }}

    # only upload artifacts if there's actually changes
    - uses: actions/upload-artifact@v4
      if: steps.git-check.outputs.modified == 'true'
      with:
        name: playwright-report-${{ matrix.os }}-${{ matrix.shardIndex }}-${{ github.sha }}
        path: playwright-report/
        include-hidden-files: true
        retention-days: 30

    - name: Run playwright/electron flow (with retries)
      id: retry
      shell: bash
      run: |
        .github/ci-cd-scripts/playwright-electron.sh ${{matrix.shardIndex}} ${{matrix.shardTotal}} ${{matrix.os}}
      env:
        CI: true
        FAIL_ON_CONSOLE_ERRORS: true
        NODE_ENV: development
        VITE_KC_DEV_TOKEN: ${{ secrets.KITTYCAD_API_TOKEN_DEV }}
        VITE_KC_SKIP_AUTH: true
        token: ${{ secrets.KITTYCAD_API_TOKEN_DEV }}

    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.os }}-${{ matrix.shardIndex }}-${{ github.sha }}
        path: test-results/
        include-hidden-files: true
        retention-days: 30
        overwrite: true

    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report-${{ matrix.os }}-${{ matrix.shardIndex }}-${{ github.sha }}
        path: playwright-report/
        include-hidden-files: true
        retention-days: 30
        overwrite: true
