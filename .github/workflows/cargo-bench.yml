on:
  push:
    branches:
      - main
    paths:
      - '**.rs'
      - '**/Cargo.toml'
      - '**/Cargo.lock'
      - '**/rust-toolchain.toml'
      - .github/workflows/cargo-bench.yml
  pull_request:
    paths:
      - '**.rs'
      - '**/Cargo.toml'
      - '**/Cargo.lock'
      - '**/rust-toolchain.toml'
      - .github/workflows/cargo-bench.yml
  workflow_dispatch:
permissions:
  contents: read
  pull-requests: write
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true
name: cargo bench
jobs:
  cargo-bench:
    name: cargo bench
    runs-on:
      - runs-on=${{ github.run_id }}
      - runner=32cpu-linux-x64
      - extras=s3-cache
    steps:
      - uses: runs-on/action@v1
      - uses: actions/checkout@v4
      - name: Use correct Rust toolchain
        shell: bash
        run: |
          [ -e rust-toolchain.toml ] || cp rust/rust-toolchain.toml ./
      - name: Install rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          cache: rust
      - name: Install dependencies
        run: |
          cargo install cargo-criterion
          cargo install cargo-codspeed
          cd rust/kcl-lib
          cargo add --dev codspeed-criterion-compat --rename criterion
      - name: Build the benchmark target(s)
        run: |
          cd rust
          cargo codspeed build --measurement-mode walltime
      - name: Run the benchmarks
        uses: CodSpeedHQ/action@v3
        with:
          working-directory: rust
          run: cargo codspeed run
          token: ${{ secrets.CODSPEED_TOKEN }}
          mode: walltime
        env:
          KITTYCAD_API_TOKEN: ${{ secrets.KITTYCAD_API_TOKEN }}
