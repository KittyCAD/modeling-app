name: Playwright Tests
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  playwright:
    timeout-minutes: 60
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v4
      with:
        node-version-file: '.nvmrc'
        cache: 'yarn'
    - name: Install dependencies
      run: yarn
    - name: Install Playwright Browsers
      run: yarn playwright install --with-deps
    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
    - name: Cache wasm
      uses: Swatinem/rust-cache@v2
      with:
        workspaces: './src/wasm-lib'
    - name: build wasm
      run: yarn build:wasm
    - name: build web
      run: yarn build:local
    - name: Run macos/safari
      if: matrix.os == 'macos-latest'
      run: yarn playwright test --project="webkit" --update-snapshots
      env:
        CI: true
        token: ${{ secrets.KITTYCAD_API_TOKEN_DEV }}
    - name: Run ubuntu/chrome
      if: matrix.os == 'ubuntu-latest'
      run: yarn playwright test --project="Google Chrome" --update-snapshots
      env:
        CI: true
        token: ${{ secrets.KITTYCAD_API_TOKEN_DEV }}
    # - name: Run Playwright tests
    #   run: yarn playwright test
    #   env:
    #     CI: true
    #     token: ${{ secrets.KITTYCAD_API_TOKEN_DEV }}
    - uses: actions/upload-artifact@v3
      if: always()
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30
    - name: check for changes
      id: git-check
      run: |
          git add .
          if git status | grep -q "Changes to be committed"
          then
            echo "::set-output name=modified::true"
          else
            echo "::set-output name=modified::false"
          fi
    - name: Commit changes, if any
      if: steps.git-check.outputs.modified == 'true'
      run: |
        git add .
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git remote set-url origin https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
        git fetch origin
        echo ${{ github.head_ref }}
        git checkout ${{ github.head_ref }}
        git commit -am "A snapshot a day keeps the bugs away! üì∑üêõ" || true
        git push
        git push origin ${{ github.head_ref }}
