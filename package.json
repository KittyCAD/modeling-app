{
  "name": "zoo-modeling-app",
  "version": "0.0.0",
  "private": true,
  "productName": "Zoo Design Studio",
  "author": {
    "name": "Zoo Corporation",
    "email": "info@zoo.dev",
    "url": "https://zoo.dev"
  },
  "description": "Zoo Design Studio",
  "main": ".vite/build/main.js",
  "license": "MIT",
  "workspaces": [
    "packages/codemirror-lang-kcl",
    "packages/codemirror-lsp-client",
    "rust/kcl-language-server"
  ],
  "dependencies": {
    "@codemirror/autocomplete": "^6.18.6",
    "@codemirror/commands": "^6.8.1",
    "@codemirror/language": "^6.11.0",
    "@codemirror/lint": "^6.8.5",
    "@codemirror/search": "^6.5.10",
    "@codemirror/state": "^6.5.2",
    "@codemirror/theme-one-dark": "^6.1.2",
    "@csstools/postcss-oklab-function": "^4.0.9",
    "@fortawesome/fontawesome-svg-core": "^6.7.2",
    "@fortawesome/free-brands-svg-icons": "^6.7.2",
    "@fortawesome/free-solid-svg-icons": "^6.7.2",
    "@fortawesome/react-fontawesome": "^0.2.0",
    "@headlessui/react": "^1.7.19",
    "@headlessui/tailwindcss": "^0.2.2",
    "@kittycad/lib": "^2.0.34",
    "@lezer/highlight": "^1.2.1",
    "@lezer/lr": "^1.4.1",
    "@million/lint": "^1.0.14",
    "@react-hook/resize-observer": "^2.0.1",
    "@replit/codemirror-interact": "^6.3.1",
    "@ts-stack/markdown": "^1.5.0",
    "@tweenjs/tween.js": "^23.1.1",
    "@xstate/inspect": "^0.8.0",
    "@xstate/react": "^4.1.1",
    "bonjour-service": "^1.3.0",
    "bson": "^6.10.3",
    "chokidar": "^4.0.3",
    "codemirror": "^6.0.1",
    "decamelize": "^6.0.0",
    "diff": "^7.0.0",
    "electron-updater": "^6.6.2",
    "fuse.js": "^7.1.0",
    "html2canvas-pro": "^1.5.8",
    "isomorphic-fetch": "^3.0.0",
    "json-rpc-2.0": "^1.6.0",
    "jszip": "^3.10.1",
    "minimist": "^1.2.8",
    "openid-client": "^5.6.5",
    "re-resizable": "^6.11.2",
    "react": "^18.3.1",
    "react-dom": "^18.2.0",
    "react-hot-toast": "^2.5.2",
    "react-hotkeys-hook": "^4.6.1",
    "react-json-view": "^1.21.3",
    "react-modal": "^3.16.3",
    "react-modal-promise": "^1.0.2",
    "react-router-dom": "^6.28.0",
    "sketch-helpers": "^0.0.4",
    "three": "^0.175.0",
    "ua-parser-js": "^1.0.37",
    "uuid": "^11.1.0",
    "vscode-jsonrpc": "^8.2.1",
    "vscode-languageserver-protocol": "^3.17.5",
    "vscode-uri": "^3.1.0",
    "web-vitals": "^3.5.2",
    "why-is-node-running": "^3.2.2",
    "win-ca": "^3.5.1",
    "xstate": "^5.19.2",
    "yargs": "^17.7.2"
  },
  "scripts": {
    "prepare": "husky",
    "install:rust": "curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain none && source \"$HOME/.cargo/env\" && (cd rust && (rustup show active-toolchain || rustup toolchain install))",
    "install:rust:windows": "winget install Microsoft.VisualStudio.2022.Community --silent --override \"--wait --quiet --add ProductLang En-us --add Microsoft.VisualStudio.Workload.NativeDesktop --includeRecommended\" && winget install Rustlang.Rustup",
    "install:wasm-pack:sh": ". $HOME/.cargo/env && curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh -s -- -f",
    "install:wasm-pack:cargo": "cargo install wasm-pack",
    "install:tools:windows": "winget install jqlang.jq MikeFarah.yq GitHub.cli",
    "start": "vite --port=3000 --host=0.0.0.0",
    "start:prod": "vite preview --port=3000",
    "serve": "vite serve --port=3000",
    "build": "npm run install:rust && . $HOME/.cargo/env && npm run install:wasm-pack:sh && npm run build:wasm && vite build",
    "build:wasm": "./scripts/build-wasm.sh",
    "build:wasm:windows": "powershell -ExecutionPolicy Bypass -File ./scripts/build-wasm.ps1",
    "build:wasm-dev": "npm run build:wasm:dev",
    "build:wasm:dev": "./scripts/build-wasm-dev.sh",
    "build:wasm:dev:windows": "powershell -ExecutionPolicy Bypass -File ./scripts/build-wasm-dev.ps1",
    "pretest": "npm run remove-importmeta",
    "test:rust": "(cd rust && just test && just lint)",
    "simpleserver": "npm run pretest && http-server ./public --cors -p 3000",
    "simpleserver:ci": "npm run pretest && http-server ./public --cors -p 3000 &",
    "simpleserver:bg": "npm run pretest && http-server ./public --cors -p 3000 &",
    "simpleserver:stop": "kill-port 3000",
    "tsc": "tsc",
    "playwright": "playwright",
    "fmt": "biome format --write .eslintrc.json ./src *.ts *.js ./e2e ./packages ./rust/kcl-language-server ./rust/kcl-lib/bindings ./rust/kcl-wasm-lib/pkg",
    "fmt:check": "biome check --write --organize-imports-enabled=true --formatter-enabled=false --linter-enabled=false  --files-ignore-unknown=true ./src *.ts *.js ./e2e ./packages ./rust/kcl-language-server ./rust/kcl-lib/bindings ./rust/kcl-wasm-lib/pkg",
    "organize-imports": "biome check --write --organize-imports-enabled=true --formatter-enabled=false --linter-enabled=false ./src ./e2e ./packages --files-ignore-unknown=true",
    "check": "biome check ./src ./e2e ./packages/codemirror-lsp-client/src ./rust/kcl-language-server/client/src",
    "fetch:wasm": "./scripts/get-latest-wasm-bundle.sh",
    "fetch:wasm:windows": "powershell -ExecutionPolicy Bypass -File ./scripts/get-latest-wasm-bundle.ps1",
    "remove-importmeta": "sed -i 's/import.meta.url/window.location.origin/g' \"./rust/kcl-wasm-lib/pkg/kcl_wasm_lib.js\"; sed -i '' 's/import.meta.url/window.location.origin/g' \"./rust/kcl-wasm-lib/pkg/kcl_wasm_lib.js\" || echo \"sed for both mac and linux\"",
    "lint-fix": "eslint --fix --ext .ts --ext .tsx src e2e packages/codemirror-lsp-client/src rust/kcl-language-server/client/src",
    "lint": "eslint --max-warnings 0 --ext .ts --ext .tsx src e2e packages/codemirror-lsp-client/src rust/kcl-language-server/client/src",
    "circular-deps": "dpdm --no-warning --no-tree -T --skip-dynamic-imports=circular src/index.tsx",
    "circular-deps:overwrite": "npm run circular-deps | sed '$d' | grep -v '^npm run' > known-circular.txt",
    "circular-deps:diff": "./scripts/diff-circular-deps.sh",
    "circular-deps:diff:nodejs": "npm run circular-deps:diff || node ./scripts/diff.js",
    "files:set-version": "echo \"$(jq --arg v \"$VERSION\" '.version=$v' package.json --indent 2)\" > package.json",
    "files:set-notes": "./scripts/set-files-notes.sh",
    "files:flip-to-nightly": "./scripts/flip-files-to-nightly.sh",
    "files:flip-to-nightly:windows": "powershell -ExecutionPolicy Bypass -File ./scripts/flip-files-to-nightly.ps1",
    "files:invalidate-bucket": "./scripts/invalidate-files-bucket.sh",
    "files:invalidate-bucket:nightly": "./scripts/invalidate-files-bucket.sh --nightly",
    "postinstall": "electron-rebuild",
    "generate:machine-api": "npx openapi-typescript ./openapi/machine-api.json -o src/lib/machine-api.d.ts",
    "tron:start": "electron-forge start",
    "chrome:test": "PLATFORM=web NODE_ENV=development playwright test --config=playwright.config.ts --project='Google Chrome' --grep-invert=@snapshot",
    "tronb:vite:dev": "vite build -c vite.main.config.ts -m development && vite build -c vite.preload.config.ts -m development && vite build -c vite.renderer.config.ts -m development",
    "tronb:vite:prod": "vite build -c vite.main.config.ts && vite build -c vite.preload.config.ts && vite build -c vite.renderer.config.ts",
    "tronb:package:dev": "npm run tronb:vite:dev && electron-builder --config electron-builder.yml",
    "tronb:package:prod": "npm run tronb:vite:prod && electron-builder --config electron-builder.yml --publish always",
    "test-setup": "npm install && npm run build:wasm",
    "test": "vitest --mode development",
    "test:snapshots": "PLATFORM=web NODE_ENV=development playwright test --config=playwright.config.ts --grep=@snapshot --trace=on --shard=1/1",
    "test:unit": "vitest run --mode development --exclude **/kclSamples.test.ts --exclude **/jest-component-unit-tests/*",
    "test:unit:components": "jest -c jest-component-unit-tests/jest.config.ts --rootDir jest-component-unit-tests/",
    "test:unit:kcl-samples": "vitest run --mode development ./src/lang/kclSamples.test.ts",
    "test:playwright:electron": "playwright test --config=playwright.electron.config.ts --grep-invert=@snapshot",
    "test:playwright:electron:local": "npm run tronb:vite:dev && playwright test --config=playwright.electron.config.ts --grep-invert=@snapshot --grep-invert=\"$(curl --silent https://test-analysis-bot.hawk-dinosaur.ts.net/projects/KittyCAD/modeling-app/tests/disabled/regex)\"",
    "test:playwright:electron:local-engine": "npm run tronb:vite:dev && playwright test --config=playwright.electron.config.ts --grep-invert='@snapshot|@skipLocalEngine' --grep-invert=\"$(curl --silent https://test-analysis-bot.hawk-dinosaur.ts.net/projects/KittyCAD/modeling-app/tests/disabled/regex)\"",
    "test:unit:local": "npm run simpleserver:bg && npm run test:unit; kill-port 3000",
    "test:unit:kcl-samples:local": "npm run simpleserver:bg && npm run test:unit:kcl-samples; kill-port 3000"
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "devDependencies": {
    "@babel/plugin-proposal-private-property-in-object": "^7.21.11",
    "@babel/preset-env": "^7.26.9",
    "@babel/preset-react": "^7.27.1",
    "@biomejs/biome": "^1.9.4",
    "@electron-forge/cli": "^7.8.0",
    "@electron-forge/plugin-fuses": "^7.8.0",
    "@electron-forge/plugin-vite": "^7.8.0",
    "@electron/fuses": "^1.8.0",
    "@electron/notarize": "^2.5.0",
    "@iarna/toml": "^2.2.5",
    "@lezer/generator": "^1.7.3",
    "@nabla/vite-plugin-eslint": "^2.0.5",
    "@playwright/test": "^1.52.0",
    "@testing-library/jest-dom": "^5.17.0",
    "@testing-library/react": "^15.0.7",
    "@types/diff": "^7.0.2",
    "@types/electron": "^1.6.10",
    "@types/isomorphic-fetch": "^0.0.39",
    "@types/jest": "^29.5.14",
    "@types/minimist": "^1.2.5",
    "@types/mocha": "^10.0.10",
    "@types/node": "^22.14.1",
    "@types/pixelmatch": "^5.2.6",
    "@types/pngjs": "^6.0.4",
    "@types/react": "^18.3.4",
    "@types/react-dom": "^18.3.1",
    "@types/react-modal": "^3.16.3",
    "@types/three": "^0.175.0",
    "@types/ua-parser-js": "^0.7.39",
    "@types/uuid": "^9.0.8",
    "@types/wicg-file-system-access": "^2023.10.6",
    "@types/ws": "^8.18.1",
    "@vitejs/plugin-react": "^4.4.1",
    "@vitest/web-worker": "^3.1.2",
    "@xstate/cli": "^0.5.17",
    "autoprefixer": "^10.4.21",
    "babel-preset-vite": "^1.1.3",
    "dpdm": "^3.14.0",
    "electron": "^34.1.1",
    "electron-builder": "^26.0.12",
    "eslint": "^8.0.1",
    "eslint-plugin-css-modules": "^2.12.0",
    "eslint-plugin-import": "^2.31.0",
    "eslint-plugin-jest": "^28.11.0",
    "eslint-plugin-jsx-a11y": "^6.10.2",
    "eslint-plugin-react": "^7.37.5",
    "eslint-plugin-react-hooks": "^5.2.0",
    "eslint-plugin-react-perf": "^3.3.3",
    "eslint-plugin-suggest-no-throw": "^1.0.0",
    "eslint-plugin-testing-library": "^7.1.1",
    "happy-dom": "^17.4.4",
    "http-server": "^14.1.1",
    "husky": "^9.1.7",
    "jest": "^29.7.0",
    "jest-environment-jsdom": "^29.7.0",
    "jest-fixed-jsdom": "^0.0.9",
    "kill-port": "^2.0.1",
    "msw": "^2.7.6",
    "node-fetch": "^3.3.2",
    "openapi-typescript": "^7.6.1",
    "pixelmatch": "^5.3.0",
    "pngjs": "^7.0.0",
    "postcss": "^8.4.43",
    "postinstall-postinstall": "^2.1.0",
    "setimmediate": "^1.0.5",
    "tailwindcss": "^3.4.17",
    "ts-jest": "^29.3.2",
    "ts-node": "^10.0.0",
    "typescript": "^5.8.3",
    "typescript-eslint": "^8.30.1",
    "vite": "^5.4.18",
    "vite-plugin-package-version": "^1.1.0",
    "vite-plugin-top-level-await": "^1.5.0",
    "vite-tsconfig-paths": "^4.3.2",
    "vitest": "^3.1.2",
    "vitest-webgl-canvas-mock": "^1.1.0",
    "ws": "^8.18.1"
  }
}
