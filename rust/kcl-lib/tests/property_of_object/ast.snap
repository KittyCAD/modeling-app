---
source: kcl-lib/src/simulation_tests.rs
description: Result of parsing property_of_object.kcl
---
{
  "Ok": {
    "body": [
      {
        "declaration": {
          "end": 0,
          "id": {
            "end": 0,
            "name": "obj",
            "start": 0,
            "type": "Identifier"
          },
          "init": {
            "end": 0,
            "properties": [
              {
                "end": 0,
                "key": {
                  "end": 0,
                  "name": "foo",
                  "start": 0,
                  "type": "Identifier"
                },
                "start": 0,
                "type": "ObjectProperty",
                "value": {
                  "end": 0,
                  "raw": "1",
                  "start": 0,
                  "type": "Literal",
                  "type": "Literal",
                  "value": {
                    "value": 1.0,
                    "suffix": "None"
                  }
                }
              },
              {
                "end": 0,
                "key": {
                  "end": 0,
                  "name": "bar",
                  "start": 0,
                  "type": "Identifier"
                },
                "start": 0,
                "type": "ObjectProperty",
                "value": {
                  "end": 0,
                  "raw": "0",
                  "start": 0,
                  "type": "Literal",
                  "type": "Literal",
                  "value": {
                    "value": 0.0,
                    "suffix": "None"
                  }
                }
              }
            ],
            "start": 0,
            "type": "ObjectExpression",
            "type": "ObjectExpression"
          },
          "start": 0,
          "type": "VariableDeclarator"
        },
        "end": 0,
        "kind": "const",
        "start": 0,
        "type": "VariableDeclaration",
        "type": "VariableDeclaration"
      },
      {
        "declaration": {
          "end": 0,
          "id": {
            "end": 0,
            "name": "one_a",
            "start": 0,
            "type": "Identifier"
          },
          "init": {
            "computed": false,
            "end": 0,
            "object": {
              "end": 0,
              "name": "obj",
              "start": 0,
              "type": "Identifier",
              "type": "Identifier"
            },
            "property": {
              "end": 0,
              "raw": "\"foo\"",
              "start": 0,
              "type": "Literal",
              "type": "Literal",
              "value": "foo"
            },
            "start": 0,
            "type": "MemberExpression",
            "type": "MemberExpression"
          },
          "start": 0,
          "type": "VariableDeclarator"
        },
        "end": 0,
        "kind": "const",
        "start": 0,
        "type": "VariableDeclaration",
        "type": "VariableDeclaration"
      },
      {
        "end": 0,
        "expression": {
          "arguments": [
            {
              "end": 0,
              "name": "one_a",
              "start": 0,
              "type": "Identifier",
              "type": "Identifier"
            },
            {
              "end": 0,
              "raw": "1",
              "start": 0,
              "type": "Literal",
              "type": "Literal",
              "value": {
                "value": 1.0,
                "suffix": "None"
              }
            },
            {
              "end": 0,
              "raw": "\"Literal property lookup\"",
              "start": 0,
              "type": "Literal",
              "type": "Literal",
              "value": "Literal property lookup"
            }
          ],
          "callee": {
            "end": 0,
            "name": "assertLessThanOrEq",
            "start": 0,
            "type": "Identifier"
          },
          "end": 0,
          "start": 0,
          "type": "CallExpression",
          "type": "CallExpression"
        },
        "start": 0,
        "type": "ExpressionStatement",
        "type": "ExpressionStatement"
      },
      {
        "end": 0,
        "expression": {
          "arguments": [
            {
              "end": 0,
              "name": "one_a",
              "start": 0,
              "type": "Identifier",
              "type": "Identifier"
            },
            {
              "end": 0,
              "raw": "1",
              "start": 0,
              "type": "Literal",
              "type": "Literal",
              "value": {
                "value": 1.0,
                "suffix": "None"
              }
            },
            {
              "end": 0,
              "raw": "\"Literal property lookup\"",
              "start": 0,
              "type": "Literal",
              "type": "Literal",
              "value": "Literal property lookup"
            }
          ],
          "callee": {
            "end": 0,
            "name": "assertGreaterThanOrEq",
            "start": 0,
            "type": "Identifier"
          },
          "end": 0,
          "start": 0,
          "type": "CallExpression",
          "type": "CallExpression"
        },
        "start": 0,
        "type": "ExpressionStatement",
        "type": "ExpressionStatement"
      },
      {
        "declaration": {
          "end": 0,
          "id": {
            "end": 0,
            "name": "p",
            "start": 0,
            "type": "Identifier"
          },
          "init": {
            "end": 0,
            "raw": "\"foo\"",
            "start": 0,
            "type": "Literal",
            "type": "Literal",
            "value": "foo"
          },
          "start": 0,
          "type": "VariableDeclarator"
        },
        "end": 0,
        "kind": "const",
        "start": 0,
        "type": "VariableDeclaration",
        "type": "VariableDeclaration"
      },
      {
        "declaration": {
          "end": 0,
          "id": {
            "end": 0,
            "name": "one_b",
            "start": 0,
            "type": "Identifier"
          },
          "init": {
            "computed": true,
            "end": 0,
            "object": {
              "end": 0,
              "name": "obj",
              "start": 0,
              "type": "Identifier",
              "type": "Identifier"
            },
            "property": {
              "end": 0,
              "name": "p",
              "start": 0,
              "type": "Identifier",
              "type": "Identifier"
            },
            "start": 0,
            "type": "MemberExpression",
            "type": "MemberExpression"
          },
          "start": 0,
          "type": "VariableDeclarator"
        },
        "end": 0,
        "kind": "const",
        "start": 0,
        "type": "VariableDeclaration",
        "type": "VariableDeclaration"
      },
      {
        "end": 0,
        "expression": {
          "arguments": [
            {
              "end": 0,
              "name": "one_b",
              "start": 0,
              "type": "Identifier",
              "type": "Identifier"
            },
            {
              "end": 0,
              "raw": "1",
              "start": 0,
              "type": "Literal",
              "type": "Literal",
              "value": {
                "value": 1.0,
                "suffix": "None"
              }
            },
            {
              "end": 0,
              "raw": "\"Computed property lookup\"",
              "start": 0,
              "type": "Literal",
              "type": "Literal",
              "value": "Computed property lookup"
            }
          ],
          "callee": {
            "end": 0,
            "name": "assertLessThanOrEq",
            "start": 0,
            "type": "Identifier"
          },
          "end": 0,
          "start": 0,
          "type": "CallExpression",
          "type": "CallExpression"
        },
        "start": 0,
        "type": "ExpressionStatement",
        "type": "ExpressionStatement"
      },
      {
        "end": 0,
        "expression": {
          "arguments": [
            {
              "end": 0,
              "name": "one_b",
              "start": 0,
              "type": "Identifier",
              "type": "Identifier"
            },
            {
              "end": 0,
              "raw": "1",
              "start": 0,
              "type": "Literal",
              "type": "Literal",
              "value": {
                "value": 1.0,
                "suffix": "None"
              }
            },
            {
              "end": 0,
              "raw": "\"Computed property lookup\"",
              "start": 0,
              "type": "Literal",
              "type": "Literal",
              "value": "Computed property lookup"
            }
          ],
          "callee": {
            "end": 0,
            "name": "assertGreaterThanOrEq",
            "start": 0,
            "type": "Identifier"
          },
          "end": 0,
          "start": 0,
          "type": "CallExpression",
          "type": "CallExpression"
        },
        "start": 0,
        "type": "ExpressionStatement",
        "type": "ExpressionStatement"
      },
      {
        "declaration": {
          "end": 0,
          "id": {
            "end": 0,
            "name": "obj2",
            "start": 0,
            "type": "Identifier"
          },
          "init": {
            "end": 0,
            "properties": [
              {
                "end": 0,
                "key": {
                  "end": 0,
                  "name": "inner",
                  "start": 0,
                  "type": "Identifier"
                },
                "start": 0,
                "type": "ObjectProperty",
                "value": {
                  "end": 0,
                  "name": "obj",
                  "start": 0,
                  "type": "Identifier",
                  "type": "Identifier"
                }
              }
            ],
            "start": 0,
            "type": "ObjectExpression",
            "type": "ObjectExpression"
          },
          "start": 0,
          "type": "VariableDeclarator"
        },
        "end": 0,
        "kind": "const",
        "start": 0,
        "type": "VariableDeclaration",
        "type": "VariableDeclaration"
      },
      {
        "declaration": {
          "end": 0,
          "id": {
            "end": 0,
            "name": "one_c",
            "start": 0,
            "type": "Identifier"
          },
          "init": {
            "computed": false,
            "end": 0,
            "object": {
              "computed": false,
              "end": 0,
              "object": {
                "end": 0,
                "name": "obj2",
                "start": 0,
                "type": "Identifier",
                "type": "Identifier"
              },
              "property": {
                "end": 0,
                "name": "inner",
                "start": 0,
                "type": "Identifier",
                "type": "Identifier"
              },
              "start": 0,
              "type": "MemberExpression",
              "type": "MemberExpression"
            },
            "property": {
              "end": 0,
              "raw": "\"foo\"",
              "start": 0,
              "type": "Literal",
              "type": "Literal",
              "value": "foo"
            },
            "start": 0,
            "type": "MemberExpression",
            "type": "MemberExpression"
          },
          "start": 0,
          "type": "VariableDeclarator"
        },
        "end": 0,
        "kind": "const",
        "start": 0,
        "type": "VariableDeclaration",
        "type": "VariableDeclaration"
      },
      {
        "end": 0,
        "expression": {
          "arguments": [
            {
              "end": 0,
              "name": "one_c",
              "start": 0,
              "type": "Identifier",
              "type": "Identifier"
            },
            {
              "end": 0,
              "raw": "1",
              "start": 0,
              "type": "Literal",
              "type": "Literal",
              "value": {
                "value": 1.0,
                "suffix": "None"
              }
            },
            {
              "end": 0,
              "raw": "\"Literal property lookup\"",
              "start": 0,
              "type": "Literal",
              "type": "Literal",
              "value": "Literal property lookup"
            }
          ],
          "callee": {
            "end": 0,
            "name": "assertLessThanOrEq",
            "start": 0,
            "type": "Identifier"
          },
          "end": 0,
          "start": 0,
          "type": "CallExpression",
          "type": "CallExpression"
        },
        "start": 0,
        "type": "ExpressionStatement",
        "type": "ExpressionStatement"
      },
      {
        "end": 0,
        "expression": {
          "arguments": [
            {
              "end": 0,
              "name": "one_c",
              "start": 0,
              "type": "Identifier",
              "type": "Identifier"
            },
            {
              "end": 0,
              "raw": "1",
              "start": 0,
              "type": "Literal",
              "type": "Literal",
              "value": {
                "value": 1.0,
                "suffix": "None"
              }
            },
            {
              "end": 0,
              "raw": "\"Literal property lookup\"",
              "start": 0,
              "type": "Literal",
              "type": "Literal",
              "value": "Literal property lookup"
            }
          ],
          "callee": {
            "end": 0,
            "name": "assertGreaterThanOrEq",
            "start": 0,
            "type": "Identifier"
          },
          "end": 0,
          "start": 0,
          "type": "CallExpression",
          "type": "CallExpression"
        },
        "start": 0,
        "type": "ExpressionStatement",
        "type": "ExpressionStatement"
      },
      {
        "declaration": {
          "end": 0,
          "id": {
            "end": 0,
            "name": "one_d",
            "start": 0,
            "type": "Identifier"
          },
          "init": {
            "computed": true,
            "end": 0,
            "object": {
              "computed": false,
              "end": 0,
              "object": {
                "end": 0,
                "name": "obj2",
                "start": 0,
                "type": "Identifier",
                "type": "Identifier"
              },
              "property": {
                "end": 0,
                "name": "inner",
                "start": 0,
                "type": "Identifier",
                "type": "Identifier"
              },
              "start": 0,
              "type": "MemberExpression",
              "type": "MemberExpression"
            },
            "property": {
              "end": 0,
              "name": "p",
              "start": 0,
              "type": "Identifier",
              "type": "Identifier"
            },
            "start": 0,
            "type": "MemberExpression",
            "type": "MemberExpression"
          },
          "start": 0,
          "type": "VariableDeclarator"
        },
        "end": 0,
        "kind": "const",
        "start": 0,
        "type": "VariableDeclaration",
        "type": "VariableDeclaration"
      },
      {
        "end": 0,
        "expression": {
          "arguments": [
            {
              "end": 0,
              "name": "one_d",
              "start": 0,
              "type": "Identifier",
              "type": "Identifier"
            },
            {
              "end": 0,
              "raw": "1",
              "start": 0,
              "type": "Literal",
              "type": "Literal",
              "value": {
                "value": 1.0,
                "suffix": "None"
              }
            },
            {
              "end": 0,
              "raw": "\"Computed property lookup\"",
              "start": 0,
              "type": "Literal",
              "type": "Literal",
              "value": "Computed property lookup"
            }
          ],
          "callee": {
            "end": 0,
            "name": "assertLessThanOrEq",
            "start": 0,
            "type": "Identifier"
          },
          "end": 0,
          "start": 0,
          "type": "CallExpression",
          "type": "CallExpression"
        },
        "start": 0,
        "type": "ExpressionStatement",
        "type": "ExpressionStatement"
      },
      {
        "end": 0,
        "expression": {
          "arguments": [
            {
              "end": 0,
              "name": "one_d",
              "start": 0,
              "type": "Identifier",
              "type": "Identifier"
            },
            {
              "end": 0,
              "raw": "1",
              "start": 0,
              "type": "Literal",
              "type": "Literal",
              "value": {
                "value": 1.0,
                "suffix": "None"
              }
            },
            {
              "end": 0,
              "raw": "\"Computed property lookup\"",
              "start": 0,
              "type": "Literal",
              "type": "Literal",
              "value": "Computed property lookup"
            }
          ],
          "callee": {
            "end": 0,
            "name": "assertGreaterThanOrEq",
            "start": 0,
            "type": "Identifier"
          },
          "end": 0,
          "start": 0,
          "type": "CallExpression",
          "type": "CallExpression"
        },
        "start": 0,
        "type": "ExpressionStatement",
        "type": "ExpressionStatement"
      }
    ],
    "end": 0,
    "nonCodeMeta": {
      "nonCodeNodes": {
        "0": [
          {
            "end": 0,
            "start": 0,
            "type": "NonCodeNode",
            "value": {
              "type": "newLineBlockComment",
              "value": "Test: the property is a literal.",
              "style": "line"
            }
          },
          {
            "end": 0,
            "start": 0,
            "type": "NonCodeNode",
            "value": {
              "type": "newLine"
            }
          }
        ],
        "1": [
          {
            "end": 0,
            "start": 0,
            "type": "NonCodeNode",
            "value": {
              "type": "newLine"
            }
          }
        ],
        "3": [
          {
            "end": 0,
            "start": 0,
            "type": "NonCodeNode",
            "value": {
              "type": "newLineBlockComment",
              "value": "Test: the property is a variable,",
              "style": "line"
            }
          },
          {
            "end": 0,
            "start": 0,
            "type": "NonCodeNode",
            "value": {
              "type": "blockComment",
              "value": "which must be evaluated before looking it up.",
              "style": "line"
            }
          },
          {
            "end": 0,
            "start": 0,
            "type": "NonCodeNode",
            "value": {
              "type": "newLine"
            }
          }
        ],
        "5": [
          {
            "end": 0,
            "start": 0,
            "type": "NonCodeNode",
            "value": {
              "type": "newLine"
            }
          }
        ],
        "7": [
          {
            "end": 0,
            "start": 0,
            "type": "NonCodeNode",
            "value": {
              "type": "newLineBlockComment",
              "value": "Test: multiple literal properties.",
              "style": "line"
            }
          },
          {
            "end": 0,
            "start": 0,
            "type": "NonCodeNode",
            "value": {
              "type": "newLine"
            }
          }
        ],
        "8": [
          {
            "end": 0,
            "start": 0,
            "type": "NonCodeNode",
            "value": {
              "type": "newLine"
            }
          }
        ],
        "9": [
          {
            "end": 0,
            "start": 0,
            "type": "NonCodeNode",
            "value": {
              "type": "newLine"
            }
          }
        ],
        "11": [
          {
            "end": 0,
            "start": 0,
            "type": "NonCodeNode",
            "value": {
              "type": "newLineBlockComment",
              "value": "Test: multiple properties, mix of literal and computed.",
              "style": "line"
            }
          },
          {
            "end": 0,
            "start": 0,
            "type": "NonCodeNode",
            "value": {
              "type": "newLine"
            }
          }
        ],
        "12": [
          {
            "end": 0,
            "start": 0,
            "type": "NonCodeNode",
            "value": {
              "type": "newLine"
            }
          }
        ]
      },
      "startNodes": [
        {
          "end": 0,
          "start": 0,
          "type": "NonCodeNode",
          "value": {
            "type": "blockComment",
            "value": "This tests evaluating properties of objects.",
            "style": "line"
          }
        },
        {
          "end": 0,
          "start": 0,
          "type": "NonCodeNode",
          "value": {
            "type": "newLine"
          }
        }
      ]
    },
    "start": 0
  }
}
