---
source: kcl-lib/src/simulation_tests.rs
description: Operations executed assembly_non_default_units.kcl
---
{
  "rust/kcl-lib/tests/assembly_non_default_units/globals.kcl": [
    {
      "type": "VariableDeclaration",
      "name": "radius",
      "value": {
        "type": "Number",
        "value": 1.0,
        "ty": {
          "type": "Default",
          "len": "in",
          "angle": "degrees"
        }
      },
      "visibility": "export",
      "nodePath": {
        "steps": []
      },
      "sourceRange": []
    }
  ],
  "rust/kcl-lib/tests/assembly_non_default_units/input.kcl": [
    {
      "type": "GroupBegin",
      "group": {
        "type": "ModuleInstance",
        "name": "other2.kcl",
        "moduleId": 0
      },
      "nodePath": {
        "steps": [
          {
            "type": "ProgramBodyItem",
            "index": 1
          }
        ]
      },
      "sourceRange": []
    },
    {
      "type": "GroupEnd"
    },
    {
      "type": "GroupBegin",
      "group": {
        "type": "ModuleInstance",
        "name": "other1.kcl",
        "moduleId": 0
      },
      "nodePath": {
        "steps": [
          {
            "type": "ProgramBodyItem",
            "index": 0
          }
        ]
      },
      "sourceRange": []
    },
    {
      "type": "GroupEnd"
    }
  ],
  "rust/kcl-lib/tests/assembly_non_default_units/other1.kcl": [
    {
      "type": "StdLibCall",
      "name": "startSketchOn",
      "unlabeledArg": {
        "value": {
          "type": "Plane",
          "artifact_id": "[uuid]"
        },
        "sourceRange": []
      },
      "labeledArgs": {},
      "nodePath": {
        "steps": []
      },
      "sourceRange": []
    }
  ],
  "rust/kcl-lib/tests/assembly_non_default_units/other2.kcl": [
    {
      "type": "StdLibCall",
      "name": "startSketchOn",
      "unlabeledArg": {
        "value": {
          "type": "Plane",
          "artifact_id": "[uuid]"
        },
        "sourceRange": []
      },
      "labeledArgs": {},
      "nodePath": {
        "steps": []
      },
      "sourceRange": []
    }
  ],
  "std::math": [
    {
      "type": "VariableDeclaration",
      "name": "PI",
      "value": {
        "type": "Number",
        "value": 3.141592653589793,
        "ty": {
          "type": "Unknown"
        }
      },
      "visibility": "export",
      "nodePath": {
        "steps": []
      },
      "sourceRange": []
    },
    {
      "type": "VariableDeclaration",
      "name": "E",
      "value": {
        "type": "Number",
        "value": 2.718281828459045,
        "ty": {
          "type": "Known",
          "type": "Count"
        }
      },
      "visibility": "export",
      "nodePath": {
        "steps": []
      },
      "sourceRange": []
    },
    {
      "type": "VariableDeclaration",
      "name": "TAU",
      "value": {
        "type": "Number",
        "value": 6.283185307179586,
        "ty": {
          "type": "Known",
          "type": "Count"
        }
      },
      "visibility": "export",
      "nodePath": {
        "steps": []
      },
      "sourceRange": []
    }
  ],
  "std::prelude": [
    {
      "type": "VariableDeclaration",
      "name": "START",
      "value": {
        "type": "String",
        "value": "start"
      },
      "visibility": "export",
      "nodePath": {
        "steps": []
      },
      "sourceRange": []
    },
    {
      "type": "VariableDeclaration",
      "name": "END",
      "value": {
        "type": "String",
        "value": "end"
      },
      "visibility": "export",
      "nodePath": {
        "steps": []
      },
      "sourceRange": []
    },
    {
      "type": "VariableDeclaration",
      "name": "NEW",
      "value": {
        "type": "String",
        "value": "new"
      },
      "visibility": "export",
      "nodePath": {
        "steps": []
      },
      "sourceRange": []
    },
    {
      "type": "VariableDeclaration",
      "name": "MERGE",
      "value": {
        "type": "String",
        "value": "merge"
      },
      "visibility": "export",
      "nodePath": {
        "steps": []
      },
      "sourceRange": []
    }
  ]
}
