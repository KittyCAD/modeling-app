---
source: kcl-lib/src/simulation_tests.rs
description: Result of parsing array_range_mismatch_units.kcl
---
{
  "Ok": {
    "body": [
      {
        "commentStart": 0,
        "declaration": {
          "commentStart": 0,
          "end": 0,
          "id": {
            "commentStart": 0,
            "end": 0,
            "name": "a",
            "start": 0,
            "type": "Identifier"
          },
          "init": {
            "commentStart": 0,
            "end": 0,
            "endElement": {
              "commentStart": 0,
              "end": 0,
              "raw": "3cm",
              "start": 0,
              "type": "Literal",
              "type": "Literal",
              "value": {
                "value": 3.0,
                "suffix": "Cm"
              }
            },
            "endInclusive": true,
            "start": 0,
            "startElement": {
              "commentStart": 0,
              "end": 0,
              "raw": "1mm",
              "start": 0,
              "type": "Literal",
              "type": "Literal",
              "value": {
                "value": 1.0,
                "suffix": "Mm"
              }
            },
            "type": "ArrayRangeExpression",
            "type": "ArrayRangeExpression"
          },
          "start": 0,
          "type": "VariableDeclarator"
        },
        "end": 0,
        "kind": "const",
        "start": 0,
        "type": "VariableDeclaration",
        "type": "VariableDeclaration"
      },
      {
        "commentStart": 0,
        "end": 0,
        "expression": {
          "arguments": [
            {
              "type": "LabeledArg",
              "label": {
                "commentStart": 0,
                "end": 0,
                "name": "error",
                "start": 0,
                "type": "Identifier"
              },
              "arg": {
                "commentStart": 0,
                "end": 0,
                "raw": "\"shouldn't make it here\"",
                "start": 0,
                "type": "Literal",
                "type": "Literal",
                "value": "shouldn't make it here"
              }
            }
          ],
          "callee": {
            "abs_path": false,
            "commentStart": 0,
            "end": 0,
            "name": {
              "commentStart": 0,
              "end": 0,
              "name": "assertIs",
              "start": 0,
              "type": "Identifier"
            },
            "path": [],
            "start": 0,
            "type": "Name"
          },
          "commentStart": 0,
          "end": 0,
          "start": 0,
          "type": "CallExpressionKw",
          "type": "CallExpressionKw",
          "unlabeled": {
            "commentStart": 0,
            "end": 0,
            "raw": "false",
            "start": 0,
            "type": "Literal",
            "type": "Literal",
            "value": false
          }
        },
        "start": 0,
        "type": "ExpressionStatement",
        "type": "ExpressionStatement"
      }
    ],
    "commentStart": 0,
    "end": 0,
    "start": 0
  }
}
