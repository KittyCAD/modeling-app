---
source: kcl-lib/src/parsing/parser.rs
expression: actual
---
{
  "body": [
    {
      "commentStart": 0,
      "declaration": {
        "commentStart": 0,
        "end": 18,
        "id": {
          "commentStart": 0,
          "end": 6,
          "moduleId": 0,
          "name": "height",
          "start": 0,
          "type": "Identifier"
        },
        "init": {
          "commentStart": 9,
          "end": 18,
          "left": {
            "commentStart": 9,
            "end": 10,
            "moduleId": 0,
            "raw": "1",
            "start": 9,
            "type": "Literal",
            "type": "Literal",
            "value": {
              "value": 1.0,
              "suffix": "None"
            }
          },
          "moduleId": 0,
          "operator": "-",
          "right": {
            "commentStart": 13,
            "computed": false,
            "end": 18,
            "moduleId": 0,
            "object": {
              "abs_path": false,
              "commentStart": 13,
              "end": 16,
              "moduleId": 0,
              "name": {
                "commentStart": 13,
                "end": 16,
                "moduleId": 0,
                "name": "obj",
                "start": 13,
                "type": "Identifier"
              },
              "path": [],
              "start": 13,
              "type": "Name",
              "type": "Name"
            },
            "property": {
              "abs_path": false,
              "commentStart": 17,
              "end": 18,
              "moduleId": 0,
              "name": {
                "commentStart": 17,
                "end": 18,
                "moduleId": 0,
                "name": "a",
                "start": 17,
                "type": "Identifier"
              },
              "path": [],
              "start": 17,
              "type": "Name",
              "type": "Name"
            },
            "start": 13,
            "type": "MemberExpression",
            "type": "MemberExpression"
          },
          "start": 9,
          "type": "BinaryExpression",
          "type": "BinaryExpression"
        },
        "moduleId": 0,
        "start": 0,
        "type": "VariableDeclarator"
      },
      "end": 18,
      "kind": "const",
      "moduleId": 0,
      "start": 0,
      "type": "VariableDeclaration",
      "type": "VariableDeclaration"
    }
  ],
  "commentStart": 0,
  "end": 18,
  "moduleId": 0,
  "start": 0
}
