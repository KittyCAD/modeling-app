---
source: kcl-lib/src/parsing/parser.rs
expression: actual
---
{
  "body": [
    {
      "commentStart": 0,
      "declaration": {
        "commentStart": 0,
        "end": 30,
        "id": {
          "commentStart": 0,
          "end": 5,
          "name": "myVar",
          "start": 0,
          "type": "Identifier"
        },
        "init": {
          "body": [
            {
              "commentStart": 8,
              "end": 13,
              "left": {
                "commentStart": 8,
                "end": 9,
                "raw": "5",
                "start": 8,
                "type": "Literal",
                "type": "Literal",
                "value": {
                  "value": 5.0,
                  "suffix": "None"
                }
              },
              "operator": "+",
              "right": {
                "commentStart": 12,
                "end": 13,
                "raw": "6",
                "start": 12,
                "type": "Literal",
                "type": "Literal",
                "value": {
                  "value": 6.0,
                  "suffix": "None"
                }
              },
              "start": 8,
              "type": "BinaryExpression",
              "type": "BinaryExpression"
            },
            {
              "arguments": [
                {
                  "commentStart": 24,
                  "end": 26,
                  "raw": "45",
                  "start": 24,
                  "type": "Literal",
                  "type": "Literal",
                  "value": {
                    "value": 45.0,
                    "suffix": "None"
                  }
                },
                {
                  "commentStart": 28,
                  "end": 29,
                  "start": 28,
                  "type": "PipeSubstitution",
                  "type": "PipeSubstitution"
                }
              ],
              "callee": {
                "commentStart": 17,
                "end": 23,
                "name": "myFunc",
                "start": 17,
                "type": "Identifier"
              },
              "commentStart": 17,
              "end": 30,
              "start": 17,
              "type": "CallExpression",
              "type": "CallExpression"
            }
          ],
          "commentStart": 8,
          "end": 30,
          "start": 8,
          "type": "PipeExpression",
          "type": "PipeExpression"
        },
        "start": 0,
        "type": "VariableDeclarator"
      },
      "end": 30,
      "kind": "const",
      "start": 0,
      "type": "VariableDeclaration",
      "type": "VariableDeclaration"
    }
  ],
  "commentStart": 0,
  "end": 30,
  "start": 0
}
